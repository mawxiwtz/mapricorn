{
  "version": 3,
  "sources": ["../src/latlng.ts", "../src/geography.ts", "../src/vector.ts", "../src/mapricorn.ts", "../src/bootstrap.ts"],
  "sourcesContent": ["export function formatNum(num: number, precision?: number) {\n    const pow = Math.pow(10, precision === undefined ? 6 : precision);\n    return Math.round(num * pow) / pow;\n}\n\n// \u7D4C\u7DEF\u5EA6\u3001\u9AD8\u5EA6\u3092\u6271\u3046\u30AF\u30E9\u30B9\nexport class LatLng {\n    lat: number = 0.0;\n    lng: number = 0.0;\n    alt?: number | undefined;\n\n    // overloads\n    constructor(latitude: number, longitude: number, altitude?: number);\n    constructor(latitude: LatLngExpression);\n\n    constructor(a: number | LatLngExpression, b?: number, c?: number) {\n        if (a instanceof LatLng) {\n            // (LatLng object)\n            return a;\n        }\n        if (Array.isArray(a) && typeof a[0] !== 'object') {\n            // ([x, y, z])\n            if (a.length === 3) {\n                return new LatLng(a[0], a[1], a[2]);\n            }\n            // ([x, y])\n            if (a.length === 2) {\n                return new LatLng(a[0], a[1]);\n            }\n            throw new Error('Invalid parameters');\n        }\n        if (a === undefined || a === null) {\n            return a;\n        }\n        if (typeof a === 'object' && 'lat' in a) {\n            // ({lat: x, lng: y, ati: z})\n            return new LatLng(a.lat, a.lng, a.alt);\n        }\n        if (b === undefined) {\n            throw new Error('Invalid parameters');\n        }\n\n        // (x, y, z)\n        const a2 = a as unknown as number;\n\n        if (isNaN(a2) || isNaN(b)) {\n            throw new Error('Invalid LatLng object: (' + a2 + ', ' + b + ')');\n        }\n\n        this.lat = a2;\n\n        this.lng = b;\n\n        if (c !== undefined) {\n            this.alt = c;\n        }\n    }\n\n    equals(otherLatLng: LatLngExpression, maxMargin?: number): boolean {\n        if (!otherLatLng) {\n            return false;\n        }\n\n        const obj = new LatLng(otherLatLng);\n\n        const margin = Math.max(Math.abs(this.lat - obj!.lat), Math.abs(this.lng - obj!.lng));\n\n        return margin <= (maxMargin === undefined ? 1.0e-9 : maxMargin);\n    }\n\n    toString(precision: number): string {\n        return (\n            'LatLng(' + formatNum(this.lat, precision) + ', ' + formatNum(this.lng, precision) + ')'\n        );\n    }\n\n    /*\n    distanceTo(otherLatLng: LatLngExpression): number {\n        return Earth.distance(this, toLatLng(otherLatLng));\n    }\n\n    wrap(): LatLng {\n        return Earth.wrapLatLng(this);\n    }\n\n    toBounds(sizeInMeters: number): LatLngBounds {\n        const latAccuracy = (180 * sizeInMeters) / 40075017,\n            lngAccuracy = latAccuracy / Math.cos((Math.PI / 180) * this.lat);\n\n        return toLatLngBounds(\n            [this.lat - latAccuracy, this.lng - lngAccuracy],\n            [this.lat + latAccuracy, this.lng + lngAccuracy],\n        );\n    }\n    */\n\n    clone(): LatLng {\n        return new LatLng(this.lat, this.lng, this.alt);\n    }\n}\n\nexport interface LatLngLiteral {\n    lat: number; // \u7DEF\u5EA6\n    lng: number; // \u7D4C\u5EA6\n    alt?: number; // \u9AD8\u5EA6\n}\n\nexport type LatLngTuple = [number, number, number?];\n\nexport type LatLngExpression = LatLng | LatLngLiteral | LatLngTuple;\n", "export const R = 6378137; // \u5730\u7403\u306E\u8D64\u9053\u534A\u5F84(m)\nexport const TILE_PIXEL = 256; // \u30BF\u30A4\u30EB1\u8FBA\u306E\u30D4\u30AF\u30BB\u30EB\u6570\n\nexport class Geography {\n    static getTilePixelByZoom(zoom: number, decimals: number = 0) {\n        // \u30BF\u30A4\u30EB\u3068\u8868\u793A\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u304C\u540C\u3058\u5834\u5408\u306Fdecimals\u306F\u7701\u7565\u53EF\u3002\n        // \u30BF\u30A4\u30EB\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3068\u8868\u793A\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u5225\u3005\u306B\u6307\u5B9A\u3057\u305F\u3044\u5834\u5408\u306F\u3001\n        // zoom\u306B\u30BF\u30A4\u30EB\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3001decimals\u306Bzoom\u52A0\u7B97\u5024\u3092\u6307\u5B9A\u3059\u308B\u3002\n        return TILE_PIXEL * (2 ** (zoom + decimals) / 2 ** Math.round(zoom));\n    }\n\n    // \u7D4C\u7DEF\u5EA6\u3092\u30B0\u30EA\u30CB\u30C3\u30B8\u5B50\u5348\u7DDA/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305Fm\u5358\u4F4D\u306B\u5909\u63DB\u3059\u308B\n    static degrees2meters(lat: number, lng: number) {\n        const x = (lng * R * Math.PI) / 180;\n        const y = R * Math.log(Math.tan(Math.PI / 4 + (lat * Math.PI) / 180 / 2));\n        return { x, y };\n    }\n\n    // \u30B0\u30EA\u30CB\u30C3\u30B8\u5B50\u5348\u7DDA/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305Fm\u5358\u4F4D\u3092\u7D4C\u7DEF\u5EA6\u306B\u5909\u63DB\u3059\u308B\n    static meters2degrees(mx: number, my: number) {\n        const lat = ((2 * Math.atan(Math.exp(my / R)) - Math.PI / 2) / Math.PI) * 180;\n        const lng = (mx / R / Math.PI) * 180;\n        return { lat, lng };\n    }\n\n    // \u30B0\u30EA\u30CB\u30C3\u30B8\u5B50\u5348\u7DDA/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305Fm\u5358\u4F4D\u3092\u5730\u56F3\u30BF\u30A4\u30EB\u72B6\u306EX/Y\u306B\u5909\u63DB\u3059\u308B\n    static meters2tile(mx: number, my: number, zoom: number) {\n        const x = Math.floor(((mx + R * Math.PI) / (2 * R * Math.PI)) * 2 ** Math.round(zoom));\n        const y = Math.floor((1 - (my + R * Math.PI) / (2 * R * Math.PI)) * 2 ** Math.round(zoom));\n        return { x, y };\n    }\n\n    // \u7D4C\u7DEF\u5EA6\u3092\u5730\u56F3\u30BF\u30A4\u30EB\u72B6\u306EX/Y\u306B\u5909\u63DB\u3059\u308B\n    static degrees2tile(lat: number, lng: number, zoom: number) {\n        const r = Geography.degrees2meters(lat, lng);\n        return Geography.meters2tile(r.x, r.y, zoom);\n    }\n\n    // \u5730\u56F3\u30BF\u30A4\u30EB\u72B6\u306EX/Y\u3092\u30B0\u30EA\u30CB\u30C3\u30B8\u5B50\u5348\u7DDA/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305Fm\u5358\u4F4D\u306B\u5909\u63DB\u3059\u308B\n    // \u30BF\u30A4\u30EB\u306E\u5DE6\u4E0A\u9685\u306E\u5EA7\u6A19\u3068\u306A\u308B\n    static tile2meters(x: number, y: number, zoom: number) {\n        const mx = (x / 2 ** Math.round(zoom)) * (2 * R * Math.PI) - R * Math.PI;\n        const my = (1 - y / 2 ** Math.round(zoom)) * (2 * R * Math.PI) - R * Math.PI;\n        return { x: mx, y: my };\n    }\n\n    // \u30B0\u30EA\u30CB\u30C3\u30B8\u5B50\u5348\u7DDA/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305Fm\u5358\u4F4D\u3092\u3001\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\u7CFB\u306E\u30D4\u30AF\u30BB\u30EB\u5EA7\u6A19\u306B\u3059\u308B\n    // \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\u7CFB\u306F\u3001\u539F\u70B9\u3092\u4E2D\u5FC3\u3068\u3057\u3066\u6771\u5074/\u5357\u5074\u304C\u6B63\u3068\u306A\u308B\u3053\u3068\u306B\u6CE8\u610F\u3059\u308B\n    static meter2world(mx: number, my: number, zoom: number) {\n        const mpp = this.getMetersPerPixelByZoom(zoom);\n        const world_px = mx / mpp;\n        const world_py = -my / mpp;\n        return { x: world_px, y: world_py };\n    }\n\n    // \u6307\u5B9A\u30E1\u30FC\u30C8\u30EB/\u30D4\u30AF\u30BB\u30EB\u306B\u53CE\u307E\u308B\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u8A08\u7B97\n    static getZoomByMetersPerPixel(mpp: number) {\n        return Math.log((2 * Math.PI * R) / (mpp * TILE_PIXEL)) / Math.log(2);\n    }\n\n    // \u6307\u5B9A\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u306B\u304A\u3051\u308B\u30BF\u30A4\u30EB\uFF11\u8FBA\u306E\u9577\u3055(\u30E1\u30FC\u30C8\u30EB)\u3092\u8A08\u7B97\n    static getMetersPerTileByZoom(zoom: number) {\n        return (2 * Math.PI * R) / 2 ** zoom;\n    }\n\n    // \u6307\u5B9A\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u306B\u304A\u3051\u308B1px\u3042\u305F\u308A\u306E\u30E1\u30FC\u30C8\u30EB\u3092\u8A08\u7B97\n    static getMetersPerPixelByZoom(zoom: number) {\n        return (2 * R * Math.PI) / (2 ** zoom * TILE_PIXEL);\n    }\n}\n", "export class Vector2 {\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    clone() {\n        return new Vector2(this.x, this.y);\n    }\n\n    add(obj: number | Vector2) {\n        if (obj instanceof Vector2) {\n            this.x += obj.x;\n            this.y += obj.y;\n        } else {\n            this.x += obj;\n            this.y += obj;\n        }\n        return this;\n    }\n\n    sub(obj: number | Vector2) {\n        if (obj instanceof Vector2) {\n            this.x -= obj.x;\n            this.y -= obj.y;\n        } else {\n            this.x -= obj;\n            this.y -= obj;\n        }\n        return this;\n    }\n\n    mul(obj: number) {\n        this.x *= obj;\n        this.y *= obj;\n        return this;\n    }\n\n    div(obj: number) {\n        this.x /= obj;\n        this.y /= obj;\n        return this;\n    }\n\n    dot(vec: Vector2) {\n        return this.x * vec.x + this.y * vec.y;\n    }\n\n    cross(vec: Vector2) {\n        return this.x * vec.y - this.y * vec.x;\n    }\n\n    lengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n\n    angleTo(vec: Vector2) {\n        const denominator = Math.sqrt(this.lengthSq() * vec.lengthSq());\n\n        if (denominator === 0) throw new Error(\"angleTo() can't handle zero length vectors.\");\n\n        let theta = this.dot(vec) / denominator;\n        if (theta < -1) theta = -1;\n        if (theta > 1) theta = 1;\n\n        return Math.acos(theta);\n    }\n\n    translate(x: number, y: number) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n\n    rotate(rad: number) {\n        const x = Math.cos(rad) * this.x - Math.sin(rad) * this.y;\n        const y = Math.sin(rad) * this.x + Math.cos(rad) * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n}\n", "import { LatLng, type LatLngExpression } from './latlng.js';\nimport type { GPXData } from './gpx.js';\nimport { Geography } from './geography.js';\nimport { Vector2 } from './vector.js';\n\ntype PointerInfo = {\n    id: number;\n    x: number;\n    y: number;\n    old?: {\n        x: number;\n        y: number;\n    };\n};\n\nexport type MapricornOptions = {\n    container?: HTMLElement;\n    width?: string;\n    height?: string;\n    mapSource?: string;\n    center?: LatLngExpression;\n    zoom?: number;\n    enableRotate?: boolean;\n    showTileInfo?: boolean;\n};\n\n// \u5730\u56F3\u8868\u793A\u3092\u884C\u3046\u30AF\u30E9\u30B9\nexport class Mapricorn {\n    container?: HTMLElement;\n    width = '';\n    height = '';\n    canvas: HTMLCanvasElement;\n    canvas2: HTMLCanvasElement;\n    mapSource = 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n    //mapSource = '/map/osm/{z}/{x}/{y}.png';\n    gpxData?: GPXData;\n    center: LatLng;\n    zoom: number = 2;\n    zoomMax = 19;\n    zoomMin = 2;\n    latMax: number = 0;\n    lngMin: number = 0;\n    enableRotate: boolean = true;\n    showTileInfo = false;\n\n    _serial: number = 0;\n    _oldPoint?: { x: number; y: number };\n    _isMoving = false;\n    _imageCache: Record<string, HTMLImageElement>;\n    _drawing: boolean = false;\n    _pointers: Record<number, PointerInfo>;\n    _shiftL = false;\n    _theta = 0;\n\n    constructor(opts?: MapricornOptions) {\n        this.center = new LatLng([0, 0, 0]);\n        this.canvas = document.createElement('canvas');\n        this.canvas2 = document.createElement('canvas');\n        this._imageCache = {};\n        this._pointers = {};\n\n        if (opts) {\n            if (opts.mapSource) {\n                this.mapSource = opts.mapSource;\n            }\n            if (opts.center) {\n                this.center = new LatLng(opts.center);\n            }\n            if (opts.zoom) {\n                this.setZoom(opts.zoom);\n            }\n            if (opts.width) {\n                this.width = opts.width;\n            }\n            if (opts.height) {\n                this.height = opts.height;\n            }\n            if (opts.enableRotate) {\n                this.enableRotate = opts.enableRotate;\n            }\n            if (opts.showTileInfo) {\n                this.showTileInfo = opts.showTileInfo;\n            }\n            if (opts.container) {\n                this.bind(opts.container);\n            }\n        }\n    }\n\n    bind(container: HTMLElement) {\n        if (container === undefined) {\n            throw new Error('Invalid container');\n        }\n        this.container = container;\n        this.setup();\n        this.resize();\n    }\n\n    // canvas\u306E\u521D\u671F\u8A2D\u5B9A\n    setup() {\n        if (!this.container) {\n            return;\n        }\n        this.container.style.position = 'relative';\n        this.container.style.overflow = 'hidden';\n        if (this.width) {\n            this.container.style.width = this.width;\n        }\n        if (this.height) {\n            this.container.style.height = this.height;\n        }\n\n        this.canvas = document.createElement('canvas');\n        this.canvas.style.position = 'absolute';\n        this.canvas.style.width = '100%';\n        this.canvas.style.height = '100%';\n        this.canvas.style.zIndex = '1';\n        this.container.appendChild(this.canvas);\n\n        this.canvas2 = document.createElement('canvas');\n        this.canvas2.style.position = 'absolute';\n        this.canvas2.style.width = '100%';\n        this.canvas2.style.height = '100%';\n        this.canvas2.style.zIndex = '0';\n        this.container.appendChild(this.canvas2);\n\n        window.addEventListener('resize', this.handlerResize());\n\n        // container setup\n        this.container.tabIndex = 0; // enable receive key event on element\n        this.container.style.outline = 'none'; // not show outline of element when getting focus\n        this.container.focus();\n\n        // disable pinch in-out by browser\n        this.container.addEventListener('touchstart', (event) => {\n            event.preventDefault();\n        });\n\n        this.container.addEventListener('pointerdown', this.handlerPointerDown());\n        this.container.addEventListener('pointerup', this.handlerPointerUp());\n        this.container.addEventListener('pointermove', this.handlerPointerMove());\n        this.container.addEventListener('wheel', this.handlerMouseWheel());\n\n        this.container.addEventListener('keydown', this.handlerKeyDown());\n        this.container.addEventListener('keyup', this.handlerKeyUp());\n    }\n\n    // canvas\u306E\u30EA\u30B5\u30A4\u30BA\u3068\u89E3\u50CF\u5EA6\u8A2D\u5B9A\uFF08\u307C\u3084\u3051\u9632\u6B62\uFF09\n    // canvas\u306E\u5404\u7A2E\u8A2D\u5B9A\u306F\u6D88\u3048\u308B\n    resize() {\n        const dpr = window.devicePixelRatio;\n        this.canvas.width = this.canvas.clientWidth * dpr;\n        this.canvas.height = this.canvas.clientHeight * dpr;\n\n        this.canvas2.width = this.canvas2.clientWidth * dpr;\n        this.canvas2.height = this.canvas2.clientHeight * dpr;\n\n        const context = this.canvas.getContext('2d');\n        if (!context) {\n            return;\n        }\n        context.restore();\n        context.scale(dpr, dpr);\n        context.save();\n\n        const context2 = this.canvas2.getContext('2d');\n        if (!context2) {\n            return;\n        }\n        context2.restore();\n        context2.scale(dpr, dpr);\n        context2.save();\n\n        this.draw();\n    }\n\n    // \u73FE\u5728\u306E\u4E2D\u5FC3\u70B9\u3068\u65B0\u3057\u3044\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3067\u5730\u56F3\u3092\u63CF\u753B\u3059\u308B\n    // offsetX, offsetY\u306F\u30BA\u30FC\u30E0\u306E\u4E2D\u5FC3\u30D4\u30AF\u30BB\u30EB\uFF08\u3042\u3089\u304B\u3058\u3081moveCenter()\u3067\n    // \u4E2D\u5FC3\u70B9\u3092\u3053\u306E\u4F4D\u7F6E\u306B\u79FB\u52D5\u3057\u3066\u304A\u304F\u3053\u3068\u3002\u63CF\u753B\u5F8C\u306B\u4E2D\u5FC3\u70B9\u306F\u8868\u793A\u9818\u57DF\u306E\u4E2D\u5FC3\u306B\n    // \u518D\u8A2D\u5B9A\u3055\u308C\u308B\uFF09\u3002\u7701\u7565\u6642\u306Fcanvas\u306E\u4E2D\u5FC3\n    // zoom\u306F\u65B0\u3057\u3044\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u6307\u5B9A\u3059\u308B\u3002\u7701\u7565\u6642\u306F\u73FE\u5728\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\n    // easing\u3092false\u306B\u3059\u308B\u3068\u30BA\u30FC\u30E0\u5909\u66F4\u6642\u3082\u30A2\u30CB\u30E1\u30FC\u30B7\u30E7\u30F3\u3057\u306A\u304F\u306A\u308B\uFF08\u30D4\u30F3\u30C1\u64CD\u4F5C\u6642\u306EUX\u5411\u4E0A\uFF09\n    draw(offsetX?: number, offsetY?: number, zoom: number = this.zoom, easing: boolean = true) {\n        const ease = (func: (progress: number) => void, duration: number, endFunc: () => void) => {\n            let start = -1;\n            const handler = { id: 0 };\n            const loop = (tic: number) => {\n                if (start < 0) start = tic;\n                let progress = (tic - start) / duration;\n                if (progress > 1) progress = 1;\n                func(progress);\n                if (progress < 1) {\n                    handler.id = requestAnimationFrame(loop);\n                } else {\n                    endFunc();\n                }\n            };\n            handler.id = requestAnimationFrame(loop);\n            return handler;\n        };\n\n        const end = () => {\n            if (easing && zoom != this.zoom) {\n                this.draw2d(this.canvas, this.center, zoom, 0, 1, offsetX, offsetY);\n            }\n\n            // \u65B0\u3057\u3044\u30BA\u30FC\u30E0\u3092\u53CD\u6620\u3059\u308B\n            this.zoom = zoom;\n\n            // this.draw()\u3084this.moveCenter()\u3092\u30A2\u30F3\u30ED\u30C3\u30AF\u3059\u308B\n            this._drawing = false;\n\n            // \u30DB\u30A4\u30FC\u30EB\u30A2\u30AF\u30B7\u30E7\u30F3\u306E\u5834\u5408\u3001\u4E2D\u5FC3\u70B9\u304C\u30DD\u30A4\u30F3\u30BF\u306E\u4F4D\u7F6E\u3068\u306A\u308B\u305F\u3081\n            // \u4E2D\u5FC3\u70B9\u3068\u5B9F\u969B\u306E\u8868\u793A\u306E\u4E2D\u5FC3\u304C\u305A\u308C\u308B\u3002\u305D\u306E\u305F\u3081\u30BA\u30FC\u30E0\u5909\u66F4\u5F8C\u306E\u65B0\u305F\u306A\n            // \u4E2D\u5FC3\u70B9\u3092\u8A08\u7B97\u3057\u3001\u8A2D\u5B9A\u3059\u308B\n            if (offsetX !== undefined && offsetY !== undefined) {\n                const rx = this.canvas.clientWidth / 2 - offsetX;\n                const ry = this.canvas.clientHeight / 2 - offsetY;\n                this.moveCenter(rx, ry);\n            }\n        };\n\n        if (this._drawing) {\n            return;\n        }\n\n        // this.draw()\u304A\u3088\u3073this.moveCenter()\u3092\u30ED\u30C3\u30AF\u3059\u308B\n        this._drawing = true;\n\n        if (!easing || zoom == this.zoom) {\n            this.draw2d(this.canvas, this.center, zoom, 0, 1, offsetX, offsetY);\n            end();\n        } else {\n            // \u30BA\u30FC\u30E0\u500D\u7387\u5909\u66F4\u3092\u30A4\u30FC\u30B8\u30F3\u30B0\u3064\u304D\u3067\u884C\u3046\n            const sign = zoom > this.zoom ? 1 : -1;\n\n            // \u30BA\u30FC\u30E0\u5B8C\u4E86\u5F8C\u306E\u5730\u56F3\u3092\u7F6E\u3044\u3066\u304A\u304F\n            this.draw2d(this.canvas2, this.center, zoom, 0, 1, offsetX, offsetY);\n\n            // \u30A2\u30CB\u30E1\u30FC\u30B7\u30E7\u30F3\u3067\u30A4\u30FC\u30B8\u30F3\u30B0\u7528\u30AD\u30E3\u30F3\u30D0\u30B9\u306E\u30B5\u30A4\u30BA\u3068\u900F\u660E\u5EA6\u3092\u5909\u66F4\u3059\u308B\u3002\n            ease(\n                (progress: number) => {\n                    // \u5909\u5316\u524D\u306E\u63CF\u753B\n                    this.draw2d(\n                        this.canvas,\n                        this.center,\n                        this.zoom,\n                        sign * progress,\n                        1 - progress,\n                        offsetX,\n                        offsetY,\n                    );\n                },\n                300,\n                end,\n            );\n        }\n    }\n\n    draw2d(\n        canvas: HTMLCanvasElement,\n        center: LatLng,\n        zoom: number,\n        decimals: number = 0,\n        alpha: number = 1,\n        offsetX?: number,\n        offsetY?: number,\n    ) {\n        // \u8907\u6570\u306E\u5EA7\u6A19\u7CFB\u3092\u6271\u3046\u305F\u3081\u305D\u308C\u305E\u308C\u306E\u9055\u3044\u306B\u6CE8\u610F\n        //   \u7D4C\u7DEF\u5EA6\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u5EA6\u6570\u5358\u4F4D\u3002\u5317\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u30E1\u30FC\u30C8\u30EB\u5358\u4F4D\u3002\u5317\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30BF\u30A4\u30EBXY\uFF1B\u30B0\u30EA\u30CB\u30C3\u30B8/\u5317\u6975\u3092\u539F\u70B9\u3068\u3057\u305F\u30BF\u30A4\u30EB\u756A\u53F7\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u30D4\u30AF\u30BB\u30EB\u5358\u4F4D\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   Canvas\u5EA7\u6A19\uFF1A\u753B\u9762\u306Ecanvas\u30BF\u30B0\u9818\u57DF\u306E\u5DE6\u4E0A\u9685\u3092\u539F\u70B9\u3068\u3057\u305F\u30D4\u30AF\u30BB\u30EB\u5358\u4F4D\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n\n        // canvas\u306E\u30B5\u30A4\u30BA\n        const w = canvas.clientWidth;\n        const h = canvas.clientHeight;\n\n        // zoom\u306E\u4E2D\u5FC3\u70B9\u306E\u300Ccanvas\u4E0A\u306E\u30AA\u30D5\u30BB\u30C3\u30C8\u300D\u3092\u6C42\u3081\u308B\n        // \u30DB\u30A4\u30FC\u30EB\u30A2\u30AF\u30B7\u30E7\u30F3\u3084\u30D4\u30F3\u30C1\u30A4\u30F3/\u30A2\u30A6\u30C8\u6642\u306Fcanvas\u306E\u4E2D\u5FC3\u3068\u306F\u9650\u3089\u306A\u3044\u3053\u3068\u306B\u6CE8\u610F\u3059\u308B\n        const cx = offsetX ?? w / 2;\n        const cy = offsetY ?? h / 2;\n\n        // canvas\u306E\u8868\u793A\u7BC4\u56F2\u306E\u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\n        // zoom\u30EC\u30D9\u30EB\u3067\u306Ecanvas\u56DB\u9685\u306E\u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\uFF08zoom\u306E\u4E2D\u5FC3\u70B9\u3067\u9006\u56DE\u8EE2\u3055\u305B\u3066\u304A\u304F\uFF09\n        const pa = new Vector2(-cx, -cy).rotate(-this._theta);\n        const pb = new Vector2(w - cx, -cy).rotate(-this._theta);\n        const pc = new Vector2(w - cx, h - cy).rotate(-this._theta);\n        const pd = new Vector2(-cx, h - cy).rotate(-this._theta);\n\n        // zoom\u4E2D\u5FC3\u70B9\u306E\u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\n        const center_meter = Geography.degrees2meters(center.lat, center.lng);\n\n        // 1\u30D4\u30AF\u30BB\u30EB\u5F53\u305F\u308A\u306E\u30E1\u30FC\u30C8\u30EB\n        const mpp = Geography.getMetersPerPixelByZoom(zoom + decimals);\n\n        // \u56DB\u9685\u305D\u308C\u305E\u308C\u306E\u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\n        const pma = new Vector2(center_meter.x + pa.x * mpp, center_meter.y - pa.y * mpp);\n        const pmb = new Vector2(center_meter.x + pb.x * mpp, center_meter.y - pb.y * mpp);\n        const pmc = new Vector2(center_meter.x + pc.x * mpp, center_meter.y - pc.y * mpp);\n        const pmd = new Vector2(center_meter.x + pd.x * mpp, center_meter.y - pd.y * mpp);\n        const vab = pmb.clone().sub(pma);\n        const vbc = pmc.clone().sub(pmb);\n        const vcd = pmd.clone().sub(pmc);\n        const vda = pma.clone().sub(pmd);\n\n        // \u56DB\u9685\u305D\u308C\u305E\u308C\u306E\u30BF\u30A4\u30EB\u5EA7\u6A19\n        const ta = Geography.meters2tile(pma.x, pma.y, zoom);\n        const tb = Geography.meters2tile(pmb.x, pmb.y, zoom);\n        const tc = Geography.meters2tile(pmc.x, pmc.y, zoom);\n        const td = Geography.meters2tile(pmd.x, pmd.y, zoom);\n\n        // \u56DB\u9685\u306E\u30BF\u30A4\u30EB\u5EA7\u6A19\u304C\u3059\u3079\u3066\u53CE\u307E\u308B\u30BF\u30A4\u30EB\u7BC4\u56F2\n        let minX = Infinity,\n            minY = Infinity;\n        let maxX = -Infinity,\n            maxY = -Infinity;\n        [ta, tb, tc, td].forEach((tile) => {\n            if (tile.x < minX) minX = tile.x;\n            if (tile.y < minY) minY = tile.y;\n            if (tile.x > maxX) maxX = tile.x;\n            if (tile.y > maxY) maxY = tile.y;\n        });\n\n        // \u4E2D\u5FC3\u70B9\u306E\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\n        const world_center = Geography.meter2world(center_meter.x, center_meter.y, zoom + decimals);\n        // \u4E2D\u5FC3\u70B9\u306E\u3042\u308B\u30BF\u30A4\u30EB\n        const tile = Geography.meters2tile(center_meter.x, center_meter.y, zoom);\n        const world_meter = Geography.tile2meters(tile.x, tile.y, zoom);\n        const world = Geography.meter2world(world_meter.x, world_meter.y, zoom + decimals);\n        // \u4E2D\u5FC3\u70B9\u306E\u3042\u308B\u30BF\u30A4\u30EB\u306B\u304A\u3051\u308B\u4E2D\u5FC3\u70B9\u306E\u76F8\u5BFE\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\uFF08\u5357\u6771\u65B9\u5411\u304C\u6B63\uFF09\n        const deltax = world_center.x - world.x;\n        const deltay = world_center.y - world.y;\n\n        // \u30BF\u30A4\u30EB\u4E00\u8FBA\u306E\u30D4\u30AF\u30BB\u30EB\u6570\n        const tilePixel = Geography.getTilePixelByZoom(zoom, decimals);\n\n        // canvas\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u306E\u6E96\u5099\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n            return;\n        }\n        ctx.restore();\n        ctx.save();\n        ctx.globalAlpha = alpha;\n        ctx.translate(cx, cy);\n        ctx.rotate(this._theta);\n        const putTileText = (x: number, y: number, str: string) => {\n            ctx.strokeRect(x, y, tilePixel, tilePixel);\n            ctx.fillText(str, x + tilePixel / 2, y + tilePixel / 2);\n        };\n\n        if (this.showTileInfo) {\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = '#f00';\n            ctx.fillStyle = 'red';\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.font = `${Math.ceil(tilePixel / 10)}px Arial`;\n        }\n\n        // \u30BF\u30A4\u30EB\u7BC4\u56F2\u5185\u3067\u8868\u793A\u7BC4\u56F2\u5185\u306B\u3042\u308B\u30BF\u30A4\u30EB\u3092\u63CF\u753B\n        const tlenx = maxX - minX + 1;\n        const tleny = maxY - minY + 1;\n        const disparray: boolean[][] = [...Array(tleny)].map(() => [...Array(tlenx)].fill(false));\n        for (let iy = 0; iy < tleny; iy++) {\n            for (let ix = 0; ix < tlenx; ix++) {\n                // \u30BF\u30A4\u30EB\u5DE6\u4E0A\u9685\u9802\u70B9\u306E\u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\n                const p = Geography.tile2meters(ix + minX, iy + minY, zoom);\n                const point = new Vector2(p.x, p.y);\n                const vap = point.clone().sub(pma);\n                const vbp = point.clone().sub(pmb);\n                const vcp = point.clone().sub(pmc);\n                const vdp = point.clone().sub(pmd);\n\n                // point\u3068canvas\u8868\u793A\u7BC4\u56F2\u306E\u56DB\u8FBA\u3068\u306E\u5404\u5916\u7A4D\u304C\u3059\u3079\u3066\u8CA0\u306A\u3089\u3070point\u306F\u8868\u793A\u7BC4\u56F2\u5185\n                const crosses =\n                    vab.cross(vap) < 0 &&\n                    vbc.cross(vbp) < 0 &&\n                    vcd.cross(vcp) < 0 &&\n                    vda.cross(vdp) < 0;\n\n                disparray[iy][ix] = crosses;\n                if (crosses) {\n                    if (iy > 0) {\n                        disparray[iy - 1][ix] = true;\n                    }\n                    if (ix > 0) {\n                        disparray[iy][ix - 1] = true;\n                    }\n                    if (iy > 0 && ix > 0) {\n                        disparray[iy - 1][ix - 1] = true;\n                    }\n                }\n            }\n        }\n\n        let serial = this._serial;\n        for (let iy = 0; iy < tleny; iy++) {\n            for (let ix = 0; ix < tlenx; ix++) {\n                if (disparray[iy][ix]) {\n                    // \u63CF\u753B\n                    const tx = minX + ix;\n                    const ty = minY + iy;\n                    const x2 = (tx - tile.x) * tilePixel - deltax; // - cx;\n                    const y2 = (ty - tile.y) * tilePixel - deltay; // - cy;\n\n                    const tileText = `${Math.round(zoom)}/${tx}/${ty}`;\n                    const url = this.getMapURL(tx, ty, zoom);\n                    let image: HTMLImageElement;\n                    if (url in this._imageCache) {\n                        image = this._imageCache[url];\n                        ctx.drawImage(image, x2, y2, tilePixel, tilePixel);\n\n                        // \u30BF\u30A4\u30EB\u306E\u5883\u754C\u3068\u30BF\u30A4\u30EBXY\u306E\u8868\u793A\n                        if (this.showTileInfo) {\n                            putTileText(x2, y2, tileText);\n                        }\n                    } else {\n                        image = new Image(tilePixel, tilePixel);\n                        image.src = url;\n                        //ctx.fillRect(x2, y2, tilePixel, tilePixel);\n                    }\n                    const handler = () => {\n                        if (serial === this._serial) {\n                            // \u5730\u56F3\u753B\u50CF\u8AAD\u307F\u8FBC\u307F\u5F8C\u3082\u73FE\u5728\u306Edraw\u304C\u7121\u52B9\u306B\u306A\u3063\u3066\u3044\u306A\u3051\u308C\u3070\u63CF\u753B\u3092\u884C\u3046\n                            ctx.drawImage(image, x2, y2, tilePixel, tilePixel);\n                            // \u30BF\u30A4\u30EB\u306E\u5883\u754C\u3068\u30BF\u30A4\u30EBXY\u306E\u8868\u793A\n                            if (this.showTileInfo) {\n                                putTileText(x2, y2, tileText);\n                            }\n                        }\n                        image.removeEventListener('load', handler);\n                        this._imageCache[url] = image;\n                    };\n                    image.addEventListener('load', handler);\n                }\n            }\n        }\n\n        serial++;\n        this._serial = serial > 65536 ? 0 : serial;\n    }\n\n    // OpenStreetMap\u306A\u3069\u306E\u5730\u56F3\u753B\u50CF\u306B\u5BFE\u3059\u308BURL\u3092\u751F\u6210\u3059\u308B\n    getMapURL(x: number, y: number, zoom: number) {\n        const z = Math.round(zoom);\n        const tileMax = 1 << z;\n        x = x % tileMax;\n        if (x < 0) {\n            x = tileMax + x;\n        }\n        y = y % tileMax;\n        if (y < 0) {\n            y = tileMax + y;\n        }\n        return this.mapSource\n            .replace('{x}', String(x))\n            .replace('{y}', String(y))\n            .replace('{z}', String(z));\n    }\n\n    // GPX\u30C7\u30FC\u30BF\u3092\u30BB\u30C3\u30C8\u3059\u308B\n    // setView\u304Ctrue\u306E\u6642\u306F\u5730\u56F3\u306E\u4E2D\u5FC3\u70B9\u3084\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3082\u81EA\u52D5\u8ABF\u6574\u3055\u308C\u308B\n    setGPXData(gpxData: GPXData, setView: boolean = false) {\n        if (!gpxData || isNaN(gpxData.stats.center.lat) || isNaN(gpxData.stats.center.lng)) {\n            return;\n        }\n        this.gpxData = gpxData;\n\n        if (setView) {\n            this.adjustCenterByGPXData();\n            this.adjustZoomLevelByGPXData();\n        }\n    }\n\n    adjustCenterByGPXData() {\n        if (this.gpxData && this.gpxData.stats) {\n            const s = this.gpxData.stats;\n            this.latMax = s.latMax;\n            this.lngMin = s.lngMin;\n            this.setView(s.center);\n        }\n    }\n\n    // Canvas\u3068GPX\u30C7\u30FC\u30BF\u306E\u7BC4\u56F2\u3067\u9069\u5207\u306A\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u8A08\u7B97\u3057\u3066\u8A2D\u5B9A\u3059\u308B\n    adjustZoomLevelByGPXData(margin: number = 1.2): number | undefined {\n        if (!this.gpxData) {\n            return undefined;\n        }\n\n        // \u30ED\u30B0\u306E\u7BC4\u56F2(m)\u3092\u8A08\u7B97\n        const s = this.gpxData.stats;\n        const min = Geography.degrees2meters(s.latMin, s.lngMin);\n        const max = Geography.degrees2meters(s.latMax, s.lngMax);\n        const wm = (max.x - min.x) * margin;\n        const hm = (max.y - min.y) * margin;\n\n        // \u7BC4\u56F2\u306B\u53CE\u3081\u308B\u305F\u3081\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3001\u30BF\u30A4\u30EB\u6570\u3092\u6C42\u3081\u308B\n        // \u7E26\u6A2A\u305D\u308C\u305E\u308C\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u8A08\u7B97\u3057\u3001\u3088\u308A\u5C0F\u3055\u306A\u65B9\u3092\u53D6\u308B\n        const wz = Math.round(Geography.getZoomByMetersPerPixel(wm / this.canvas.clientWidth));\n        const hz = Math.round(Geography.getZoomByMetersPerPixel(hm / this.canvas.clientHeight));\n        this.zoom = wz < hz ? wz : hz;\n    }\n\n    setMapSource(mapSource: string) {\n        this.mapSource = mapSource;\n    }\n\n    // \u5730\u56F3\u8868\u793A\u306E\u4E2D\u5FC3\u70B9\u3068\u30BA\u30FC\u30E0\u500D\u7387\u3092\u8A2D\u5B9A\u3059\u308B\n    setView(center: LatLngExpression, zoom?: number) {\n        this.center = new LatLng(center);\n        this.setZoom(zoom);\n    }\n\n    setZoom(zoom?: number) {\n        if (zoom && zoom > 0 && zoom < 30) {\n            this.zoom = zoom;\n        }\n    }\n\n    // \u4E2D\u5FC3\u70B9\u3092x,y\u30D4\u30AF\u30BB\u30EB\u5206\u79FB\u52D5\u3059\u308B\n    // \u79FB\u52D5\u65B9\u5411\u306F\u6B63\u306E\u6570\u306A\u3089\u5357\u6771\u65B9\u5411\n    moveCenter(dx: number, dy: number) {\n        if (this._drawing) {\n            return;\n        }\n        const dv = new Vector2(dx, dy);\n        dv.rotate(-this._theta);\n        const mpp = Geography.getMetersPerPixelByZoom(this.zoom);\n\n        // \u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u3092\u30E1\u30FC\u30C8\u30EB\u306B\u76F4\u3059\n        const center = Geography.degrees2meters(this.center.lat, this.center.lng);\n        // \u30D4\u30AF\u30BB\u30EB\u5897\u5206\u3092\u30E1\u30FC\u30C8\u30EB\u306B\u5909\u63DB\u3057\u3001\u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u306E\u30E1\u30FC\u30C8\u30EB\u306B\u52A0\u7B97\u3059\u308B\n        center.x += dv.x * mpp;\n        center.y -= dv.y * mpp;\n        // \u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u306E\u30E1\u30FC\u30C8\u30EB\u3092\u7D4C\u7DEF\u5EA6\u306B\u623B\u3059\n        const deg = Geography.meters2degrees(center.x, center.y);\n\n        // \u7DEF\u5EA6\u306E\u9650\u754C\n        if (deg.lat > 85.0) {\n            deg.lat = 85.0;\n        }\n        if (deg.lat < -85.0) {\n            deg.lat = -85.0;\n        }\n        // \u7D4C\u5EA6\u306E\u9650\u754C\n        if (deg.lng > 180.0) {\n            deg.lng -= 360.0;\n        }\n        if (deg.lng < -180.0) {\n            deg.lng += 360.0;\n        }\n\n        this.center.lat = deg.lat;\n        this.center.lng = deg.lng;\n    }\n\n    start({ offsetX: x, offsetY: y }: MouseEvent | Record<string, number>) {\n        this._isMoving = true;\n        this._oldPoint = { x, y };\n    }\n\n    stop() {\n        this._oldPoint = undefined;\n        this._isMoving = false;\n    }\n\n    // \u6307\u5B9A\u5EA7\u6A19\u306B\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n    move({ offsetX: x, offsetY: y }: MouseEvent | Record<string, number>) {\n        if (this._oldPoint) {\n            // \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\u306E\u5897\u5206\u3092\u6C42\u3081\u3066\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n            const dx = this._oldPoint.x - x;\n            const dy = this._oldPoint.y - y;\n            this.moveCenter(dx, dy);\n        }\n\n        this._oldPoint = { x, y };\n    }\n\n    handlerResize() {\n        return () => {\n            this.resize();\n        };\n    }\n\n    handlerPointerDown() {\n        return (e: PointerEvent) => {\n            this._pointers[e.pointerId] = {\n                id: e.pointerId,\n                x: e.offsetX,\n                y: e.offsetY,\n            };\n            const element = <HTMLCanvasElement>e.currentTarget;\n            element.setPointerCapture(e.pointerId);\n\n            const pointers = Object.values(this._pointers);\n            if (pointers.length === 1) {\n                // \u6700\u521D\u306E\u6307\u306A\u3089\u3070\u30BF\u30C3\u30C1\u958B\u59CB\n                this.canvas.style.cursor = 'grab';\n                this.start({\n                    offsetX: pointers[0].x,\n                    offsetY: pointers[0].y,\n                });\n            }\n        };\n    }\n\n    handlerPointerUp() {\n        return (e: PointerEvent) => {\n            //e.preventDefault();\n\n            const element = <HTMLCanvasElement>e.currentTarget;\n            element.releasePointerCapture(e.pointerId);\n            delete this._pointers[e.pointerId];\n\n            const pointers = Object.values(this._pointers);\n            if (pointers.length === 0) {\n                // \u6307\u304C\u3059\u3079\u3066\u96E2\u308C\u305F\n                this.stop();\n                this.canvas.style.cursor = '';\n            }\n        };\n    }\n\n    handlerPointerMove() {\n        return (e: PointerEvent) => {\n            //e.preventDefault();\n\n            if (!this._isMoving) {\n                return;\n            }\n\n            // \u30DD\u30A4\u30F3\u30BF\u60C5\u5831\u306E\u66F4\u65B0\n            if (e.pointerId in this._pointers) {\n                const v = this._pointers[e.pointerId];\n                v.old = {\n                    x: v.x,\n                    y: v.y,\n                };\n                v.x = e.offsetX;\n                v.y = e.offsetY;\n            } else {\n                this._pointers[e.pointerId] = { id: e.pointerId, x: e.offsetX, y: e.offsetY };\n            }\n\n            // \u30DD\u30A4\u30F3\u30BF\u3092\u53E4\u3044\u9806\u306B\u30BD\u30FC\u30C8\u3057\u3066\u914D\u5217\u5316\n            const pointers = Object.values(this._pointers).sort((a, b) => a.id - b.id);\n            if (pointers.length === 0) {\n                return;\n            }\n\n            // \uFF11\u672C\u76EE\u306E\u30BF\u30C3\u30C1\u60C5\u5831\n            const p0 = pointers[0];\n            if (!p0.old) {\n                return;\n            }\n\n            const w = this.canvas.clientWidth;\n            const h = this.canvas.clientHeight;\n\n            // \uFF11\u672C\u76EE\u306E\u79FB\u52D5\u91CF\n            // \u5730\u56F3\u3092\u53F3\u4E0B\u306B\u30C9\u30E9\u30C3\u30B0\u3057\u305F\u5834\u5408\u3001\u5730\u56F3\u306E\u4E2D\u5FC3\u3092\u5DE6\u4E0A\u306B\u79FB\u52D5\u3059\u308B\u3053\u3068\u3068\u540C\u3058\u3002\n            const d0 = new Vector2(p0.old.x - p0.x, p0.old.y - p0.y);\n\n            if (pointers.length >= 2) {\n                // \u30DE\u30EB\u30C1\u30BF\u30C3\u30C1\n                // \uFF12\u672C\u76EE\u306E\u30BF\u30C3\u30C1\u60C5\u5831\n                const p1 = pointers[1];\n                if (!p1.old) {\n                    return;\n                }\n\n                // \uFF12\u672C\u76EE\u306E\u79FB\u52D5\u91CF\n                const d1 = new Vector2(p1.old.x - p1.x, p1.old.y - p1.y);\n\n                // \uFF11\u672C\u76EE\u3068\uFF12\u672C\u76EE\u306E\u79FB\u52D5\u91CF\u306E\u5E73\u5747\u5206\u3001\u4E2D\u5FC3\u70B9\u3092\u305A\u3089\u3059\u3002\n                const dx = (d0.x + d1.x) / 2;\n                const dy = (d0.y + d1.y) / 2;\n\n                // \u30D4\u30F3\u30C1\u30A4\u30F3\u30FB\u30A2\u30A6\u30C8\u306E\u6700\u7D42\u7684\u306A\u4E2D\u5FC3\u4F4D\u7F6E\u3092\u6C42\u3081\u308B\n                const rx = (p0.x + p1.x) / 2;\n                const ry = (p0.y + p1.y) / 2;\n                this.moveCenter(rx - w / 2 + dx, ry - h / 2 + dy);\n\n                let z = this.zoom;\n\n                // \u30D4\u30F3\u30C1\u30A4\u30F3\u30FB\u30A2\u30A6\u30C8\n                // \uFF11\u672C\u76EE\u3068\uFF12\u672C\u76EE\u306E\u79FB\u52D5\u5834\u6240\u3001\u79FB\u52D5\u91CF\u304B\u3089\u30BA\u30FC\u30E0\u306E\u5909\u5316\u3092\u8A08\u7B97\u3059\u308B\n                const rb = Math.sqrt((p0.old.x - p1.old.x) ** 2 + (p0.old.y - p1.old.y) ** 2);\n                const ra = Math.sqrt((p0.x - p1.x) ** 2 + (p0.y - p1.y) ** 2);\n                const mpp = Geography.getMetersPerPixelByZoom(this.zoom);\n                z = Geography.getZoomByMetersPerPixel((mpp * rb) / ra);\n\n                if (z > this.zoomMax) z = this.zoomMax;\n                if (z < this.zoomMin) z = this.zoomMin;\n\n                if (this.enableRotate && pointers.length >= 3) {\n                    // \uFF13\u672C\u4EE5\u4E0A\u306E\u3068\u304D\u306E\u307F\u56DE\u8EE2\u6709\u52B9\n                    // \uFF12\u672C\u306E\u30BF\u30C3\u30C1\u4F4D\u7F6E\uFF08\u79FB\u52D5\u524D\u3001\u79FB\u52D5\u5F8C\uFF09\u3092\u6B63\u898F\u5316\u3059\u308B\n                    const v00 = new Vector2(p0.old.x / w - 0.5, p0.old.y / h - 0.5);\n                    const v01 = new Vector2(p0.x / w - 0.5, p0.y / h - 0.5);\n                    const v10 = new Vector2(p1.old.x / w - 0.5, p1.old.y / h - 0.5);\n                    const v11 = new Vector2(p1.x / w - 0.5, p1.y / h - 0.5);\n\n                    // \uFF12\u672C\u6307\u9593\u306E\u4E2D\u9593\u4F4D\u7F6E\u3092\u6C42\u3081\u308B\n                    const c00 = v00.clone().add(v10).div(2);\n                    const c01 = v01.clone().add(v11).div(2);\n\n                    // \u5730\u56F3\u306E\u4E2D\u592E\u3092\u5186\u306E\u4E2D\u5FC3\u3068\u3057\u305F\u30D9\u30AF\u30C8\u30EB\u306B\u3059\u308B\n                    v00.sub(c00);\n                    v10.sub(c00);\n                    v01.sub(c01);\n                    v11.sub(c01);\n\n                    // \u5404\u6307\u306E\u56DE\u8EE2\u89D2\u3092\u6C42\u3081\u3001\u5408\u7B97\u3092\u5E73\u5747\u3057\u305F\u3082\u306E\u3092\u5730\u56F3\u306E\u56DE\u8EE2\u89D2\u3068\u3059\u308B\n                    const delta0 = v00.angleTo(v01) * (v00.cross(v01) < 0 ? -1 : 1);\n                    const delta1 = v10.angleTo(v11) * (v10.cross(v11) < 0 ? -1 : 1);\n                    const deltaRad = (delta0 + delta1) / 2;\n\n                    let theta = this._theta + deltaRad;\n                    if (theta > Math.PI * 2) theta = theta - Math.PI * 2;\n                    if (theta < -Math.PI * 2) theta = theta + Math.PI * 2;\n                    this._theta = theta;\n                }\n\n                // \u63CF\u753B\u3059\u308B\n                this.draw(rx, ry, z, false);\n\n                return;\n            } else {\n                // \u30DE\u30A6\u30B9\u30C9\u30E9\u30C3\u30B0 or \u30B7\u30F3\u30B0\u30EB\u30BF\u30C3\u30C1\n                if (this.enableRotate && this._shiftL) {\n                    // Shift + \u30C9\u30E9\u30C3\u30B0\u3067\u5730\u56F3\u306E\u56DE\u8EE2\n                    const v0 = new Vector2(p0.old.x / w - 0.5, p0.old.y / h - 0.5);\n                    const v1 = new Vector2(p0.x / w - 0.5, p0.y / h - 0.5);\n                    const sign = v0.cross(v1) < 0 ? -1 : 1;\n\n                    let theta = this._theta + v0.angleTo(v1) * sign;\n                    if (theta > Math.PI * 2) theta = theta - Math.PI * 2;\n                    if (theta < -Math.PI * 2) theta = theta + Math.PI * 2;\n                    this._theta = theta;\n\n                    this.draw();\n                } else {\n                    // \u5730\u56F3\u306E\u79FB\u52D5\n                    if (this._oldPoint) {\n                        const nx = this._oldPoint.x - d0.x;\n                        const ny = this._oldPoint.y - d0.y;\n                        this.move({\n                            offsetX: nx,\n                            offsetY: ny,\n                        });\n                        this.draw();\n                    }\n                }\n                return;\n            }\n        };\n    }\n\n    handlerMouseWheel() {\n        return (e: WheelEvent) => {\n            // disable wheel action by browser\n            e.preventDefault();\n\n            // \u30DB\u30A4\u30FC\u30EB\u64CD\u4F5C\u958B\u59CB\u4F4D\u7F6E\u3092\u4E2D\u5FC3\u306B\u62E1\u5927\u7E2E\u5C0F\u3059\u308B\u305F\u3081\u306B\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n            const x = e.offsetX;\n            const y = e.offsetY;\n            const dx = e.offsetX - this.canvas.clientWidth / 2;\n            const dy = e.offsetY - this.canvas.clientHeight / 2;\n            this.moveCenter(dx, dy);\n\n            let z = this.zoom;\n            if (e.deltaY < 0) {\n                z += 1;\n                if (z > this.zoomMax) z = this.zoomMax;\n            } else if (e.deltaY > 0) {\n                z += -1;\n                if (z < this.zoomMin) z = this.zoomMin;\n            } else {\n                return;\n            }\n\n            this.draw(x, y, z);\n        };\n    }\n\n    handlerKeyDown() {\n        const keyMap: Record<string, () => void> = {\n            ShiftLeft: () => {\n                this._shiftL = true;\n            },\n        };\n\n        return (e: KeyboardEvent) => {\n            const func = keyMap[e.code];\n            if (func) func();\n        };\n    }\n\n    handlerKeyUp() {\n        const keyMap: Record<string, () => void> = {\n            ShiftLeft: () => {\n                this._shiftL = false;\n            },\n        };\n\n        return (e: KeyboardEvent) => {\n            const func = keyMap[e.code];\n            if (func) func();\n        };\n    }\n}\n", "import { Mapricorn, type MapricornOptions } from './mapricorn.js';\n\ndeclare global {\n    interface Window {\n        Mapricorn: (opts: MapricornOptions) => void;\n    }\n}\n\nif (window) {\n    window.Mapricorn = (opts?: MapricornOptions) => {\n        return new Mapricorn(opts);\n    };\n}\n"],
  "mappings": "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",
  "names": ["formatNum", "num", "precision", "pow", "LatLng", "_LatLng", "a", "b", "c", "__publicField", "a2", "otherLatLng", "maxMargin", "obj", "Geography", "_Geography", "zoom", "decimals", "lat", "lng", "x", "y", "mx", "my", "r", "mpp", "world_px", "world_py", "Vector2", "_Vector2", "x", "y", "__publicField", "obj", "vec", "denominator", "theta", "rad", "Mapricorn", "opts", "__publicField", "LatLng", "container", "event", "dpr", "context", "context2", "offsetX", "offsetY", "zoom", "easing", "ease", "func", "duration", "endFunc", "start", "handler", "loop", "tic", "progress", "end", "rx", "ry", "sign", "canvas", "center", "decimals", "alpha", "w", "h", "cx", "cy", "pa", "Vector2", "pb", "pc", "pd", "center_meter", "Geography", "mpp", "pma", "pmb", "pmc", "pmd", "vab", "vbc", "vcd", "vda", "ta", "tb", "tc", "td", "minX", "minY", "maxX", "maxY", "tile", "world_center", "world_meter", "world", "deltax", "deltay", "tilePixel", "ctx", "putTileText", "x", "y", "str", "tlenx", "tleny", "disparray", "iy", "ix", "p", "point", "vap", "vbp", "vcp", "vdp", "crosses", "serial", "tx", "ty", "x2", "y2", "tileText", "url", "image", "z", "tileMax", "gpxData", "setView", "s", "margin", "min", "max", "wm", "hm", "wz", "hz", "mapSource", "dx", "dy", "dv", "deg", "e", "pointers", "v", "a", "b", "p0", "d0", "p1", "d1", "rb", "ra", "v00", "v01", "v10", "v11", "c00", "c01", "delta0", "delta1", "deltaRad", "theta", "v0", "v1", "nx", "ny", "keyMap", "opts", "Mapricorn"]
}
