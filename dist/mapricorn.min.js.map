{
  "version": 3,
  "sources": ["../src/latlng.ts", "../src/geography.ts", "../src/mapricorn.ts", "../src/bootstrap.ts"],
  "sourcesContent": ["export function formatNum(num: number, precision?: number) {\n    const pow = Math.pow(10, precision === undefined ? 6 : precision);\n    return Math.round(num * pow) / pow;\n}\n\n// \u7D4C\u7DEF\u5EA6\u3001\u9AD8\u5EA6\u3092\u6271\u3046\u30AF\u30E9\u30B9\nexport class LatLng {\n    lat: number = 0.0;\n    lng: number = 0.0;\n    alt?: number | undefined;\n\n    // overloads\n    constructor(latitude: number, longitude: number, altitude?: number);\n    constructor(latitude: LatLngExpression);\n\n    constructor(a: number | LatLngExpression, b?: number, c?: number) {\n        if (a instanceof LatLng) {\n            // (LatLng object)\n            return a;\n        }\n        if (Array.isArray(a) && typeof a[0] !== 'object') {\n            // ([x, y, z])\n            if (a.length === 3) {\n                return new LatLng(a[0], a[1], a[2]);\n            }\n            // ([x, y])\n            if (a.length === 2) {\n                return new LatLng(a[0], a[1]);\n            }\n            throw new Error('Invalid parameters');\n        }\n        if (a === undefined || a === null) {\n            return a;\n        }\n        if (typeof a === 'object' && 'lat' in a) {\n            // ({lat: x, lng: y, ati: z})\n            return new LatLng(a.lat, a.lng, a.alt);\n        }\n        if (b === undefined) {\n            throw new Error('Invalid parameters');\n        }\n\n        // (x, y, z)\n        const a2 = a as unknown as number;\n\n        if (isNaN(a2) || isNaN(b)) {\n            throw new Error('Invalid LatLng object: (' + a2 + ', ' + b + ')');\n        }\n\n        this.lat = a2;\n\n        this.lng = b;\n\n        if (c !== undefined) {\n            this.alt = c;\n        }\n    }\n\n    equals(otherLatLng: LatLngExpression, maxMargin?: number): boolean {\n        if (!otherLatLng) {\n            return false;\n        }\n\n        const obj = new LatLng(otherLatLng);\n\n        const margin = Math.max(Math.abs(this.lat - obj!.lat), Math.abs(this.lng - obj!.lng));\n\n        return margin <= (maxMargin === undefined ? 1.0e-9 : maxMargin);\n    }\n\n    toString(precision: number): string {\n        return (\n            'LatLng(' + formatNum(this.lat, precision) + ', ' + formatNum(this.lng, precision) + ')'\n        );\n    }\n\n    /*\n    distanceTo(otherLatLng: LatLngExpression): number {\n        return Earth.distance(this, toLatLng(otherLatLng));\n    }\n\n    wrap(): LatLng {\n        return Earth.wrapLatLng(this);\n    }\n\n    toBounds(sizeInMeters: number): LatLngBounds {\n        const latAccuracy = (180 * sizeInMeters) / 40075017,\n            lngAccuracy = latAccuracy / Math.cos((Math.PI / 180) * this.lat);\n\n        return toLatLngBounds(\n            [this.lat - latAccuracy, this.lng - lngAccuracy],\n            [this.lat + latAccuracy, this.lng + lngAccuracy],\n        );\n    }\n    */\n\n    clone(): LatLng {\n        return new LatLng(this.lat, this.lng, this.alt);\n    }\n}\n\nexport interface LatLngLiteral {\n    lat: number; // \u7DEF\u5EA6\n    lng: number; // \u7D4C\u5EA6\n    alt?: number; // \u9AD8\u5EA6\n}\n\nexport type LatLngTuple = [number, number, number?];\n\nexport type LatLngExpression = LatLng | LatLngLiteral | LatLngTuple;\n", "// \u5730\u7403\u306E\u8D64\u9053\u76F4\u5F84(m)\nexport const R = 6378137;\nexport const TILE_PIXEL = 256; // \u30BF\u30A4\u30EB1\u8FBA\u306E\u30D4\u30AF\u30BB\u30EB\u6570\n\nexport class Geography {\n    static getTilePixelByZoom(zoom: number) {\n        return TILE_PIXEL * (2 ** zoom / 2 ** Math.round(zoom));\n    }\n\n    // \u7D4C\u7DEF\u5EA6\u3092\u30B0\u30EA\u30CB\u30C3\u30B8\u5B50\u5348\u7DDA/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305Fm\u5358\u4F4D\u306B\u5909\u63DB\u3059\u308B\n    static degrees2meters(lat: number, lng: number) {\n        const x = (lng * 20037508.34) / 180;\n        const y = 6378137 * Math.log(Math.tan(Math.PI / 4 + (lat * Math.PI) / 180 / 2));\n        return { x, y };\n    }\n\n    // \u30B0\u30EA\u30CB\u30C3\u30B8\u5B50\u5348\u7DDA/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305Fm\u5358\u4F4D\u3092\u7D4C\u7DEF\u5EA6\u306B\u5909\u63DB\u3059\u308B\n    static meters2degrees(mx: number, my: number) {\n        const lat = ((2 * Math.atan(Math.exp(my / R)) - Math.PI / 2) / Math.PI) * 180;\n        const lng = (mx / R / Math.PI) * 180;\n        return { lat, lng };\n    }\n\n    // \u30B0\u30EA\u30CB\u30C3\u30B8\u5B50\u5348\u7DDA/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305Fm\u5358\u4F4D\u3092\u5730\u56F3\u30BF\u30A4\u30EB\u72B6\u306EX/Y\u306B\u5909\u63DB\u3059\u308B\n    static meters2tile(mx: number, my: number, zoom: number) {\n        const x = Math.floor(((mx + R * Math.PI) / (2 * R * Math.PI)) * 2 ** Math.round(zoom));\n        const y = Math.floor((1 - (my + R * Math.PI) / (2 * R * Math.PI)) * 2 ** Math.round(zoom));\n        return { x, y };\n    }\n\n    // \u7D4C\u7DEF\u5EA6\u3092\u5730\u56F3\u30BF\u30A4\u30EB\u72B6\u306EX/Y\u306B\u5909\u63DB\u3059\u308B\n    static degrees2tile(lat: number, lng: number, zoom: number) {\n        const r = Geography.degrees2meters(lat, lng);\n        return Geography.meters2tile(r.x, r.y, zoom);\n    }\n\n    // \u5730\u56F3\u30BF\u30A4\u30EB\u72B6\u306EX/Y\u3092\u30B0\u30EA\u30CB\u30C3\u30B8\u5B50\u5348\u7DDA/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305Fm\u5358\u4F4D\u306B\u5909\u63DB\u3059\u308B\n    // \u30BF\u30A4\u30EB\u306E\u5DE6\u4E0A\u9685\u306E\u5EA7\u6A19\u3068\u306A\u308B\n    static tile2meters(x: number, y: number, zoom: number) {\n        const mx = (x / 2 ** Math.round(zoom)) * (2 * R * Math.PI) - R * Math.PI;\n        const my = (1 - y / 2 ** Math.round(zoom)) * (2 * R * Math.PI) - R * Math.PI;\n        return { x: mx, y: my };\n    }\n\n    // \u30B0\u30EA\u30CB\u30C3\u30B8\u5B50\u5348\u7DDA/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305Fm\u5358\u4F4D\u3092\u3001\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\u7CFB\u306E\u30D4\u30AF\u30BB\u30EB\u5EA7\u6A19\u306B\u3059\u308B\n    // \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\u7CFB\u306F\u3001\u539F\u70B9\u3092\u4E2D\u5FC3\u3068\u3057\u3066\u6771\u5074/\u5357\u5074\u304C\u6B63\u3068\u306A\u308B\u3053\u3068\u306B\u6CE8\u610F\u3059\u308B\n    static meter2world(mx: number, my: number, zoom: number) {\n        const mpp = this.getMetersPerPixelByZoom(zoom);\n        const world_px = mx / mpp;\n        const world_py = -my / mpp;\n        return { x: world_px, y: world_py };\n    }\n\n    // \u6307\u5B9A\u30E1\u30FC\u30C8\u30EB/\u30D4\u30AF\u30BB\u30EB\u306B\u53CE\u307E\u308B\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u8A08\u7B97\n    static getZoomByMetersPerPixel(mpp: number) {\n        return Math.log((2 * Math.PI * R) / (mpp * TILE_PIXEL)) / Math.log(2);\n    }\n\n    // \u6307\u5B9A\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u306B\u304A\u3051\u308B\u30BF\u30A4\u30EB\uFF11\u8FBA\u306E\u9577\u3055(\u30E1\u30FC\u30C8\u30EB)\u3092\u8A08\u7B97\n    static getMetersPerTileByZoom(zoom: number) {\n        return (2 * Math.PI * R) / 2 ** zoom;\n    }\n\n    // \u6307\u5B9A\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u306B\u304A\u3051\u308B1px\u3042\u305F\u308A\u306E\u30E1\u30FC\u30C8\u30EB\u3092\u8A08\u7B97\n    static getMetersPerPixelByZoom(zoom: number) {\n        return (2 * R * Math.PI) / (2 ** zoom * TILE_PIXEL);\n    }\n}\n", "import { LatLng, type LatLngExpression } from './latlng.js';\nimport type { GPXData } from './gpx.js';\nimport { Geography } from './geography.js';\n\ntype TouchInfo = {\n    id: number;\n    x: number;\n    y: number;\n    old?: {\n        x: number;\n        y: number;\n    };\n};\n\nexport type MapricornOptions = {\n    container?: HTMLElement;\n    width?: string;\n    height?: string;\n    mapSource?: string;\n    center?: LatLngExpression;\n    zoom?: number;\n};\n\n// \u5730\u56F3\u8868\u793A\u3092\u884C\u3046\u30AF\u30E9\u30B9\nexport class Mapricorn {\n    debug = false;\n    container?: HTMLElement;\n    width = '';\n    height = '';\n    canvas?: HTMLCanvasElement;\n    mapSource = 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n    //mapSource = '/map/osm/{z}/{x}/{y}.png';\n    offScreen?: HTMLCanvasElement;\n    useOffScreen = true;\n    gpxData?: GPXData;\n    center: LatLng;\n    zoom: number = 1;\n    zoomMax = 19;\n    zoomMin = 0;\n    latMax: number = 0;\n    lngMin: number = 0;\n    oldPoint?: { x: number; y: number };\n    isMoving = false;\n    touchMap: Record<number, TouchInfo> = {};\n    touchList: TouchInfo[] = [];\n    images: HTMLImageElement[] = [];\n\n    constructor(opts?: MapricornOptions) {\n        this.center = new LatLng([0, 0, 0]);\n        if (opts) {\n            if (opts.mapSource) {\n                this.mapSource = opts.mapSource;\n            }\n            if (opts.center) {\n                this.center = new LatLng(opts.center);\n            }\n            if (opts.zoom) {\n                this.setZoom(opts.zoom);\n            }\n            if (opts.width) {\n                this.width = opts.width;\n            }\n            if (opts.height) {\n                this.height = opts.height;\n            }\n            if (opts.container) {\n                this.bind(opts.container);\n            }\n        }\n    }\n\n    bind(container: HTMLElement) {\n        if (container === undefined) {\n            throw new Error('Invalid container');\n        }\n        this.container = container;\n        this.setup();\n        this.resize();\n    }\n\n    // canvas\u306E\u521D\u671F\u8A2D\u5B9A\n    setup() {\n        if (!this.container) {\n            return;\n        }\n        this.container.style.position = 'relative';\n        if (this.width) {\n            this.container.style.width = this.width;\n        }\n        if (this.height) {\n            this.container.style.height = this.height;\n        }\n\n        if (!this.canvas) {\n            this.canvas = document.createElement('canvas');\n            this.container.appendChild(this.canvas);\n            this.canvas.style.width = '100%';\n            this.canvas.style.height = '100%';\n\n            const context = this.canvas.getContext('2d');\n            if (!context) {\n                return;\n            }\n            context.lineWidth = 1;\n            context.strokeStyle = '#fff';\n\n            this.canvas.addEventListener('mousedown', this.handlerMouseDown());\n            this.canvas.addEventListener('mouseup', this.handlerMouseUp());\n            this.canvas.addEventListener('mousemove', this.handlerMouseMove());\n            this.canvas.addEventListener('mouseleave', this.handlerMouseLeave());\n            this.canvas.addEventListener('touchstart', this.handlerTouchStart());\n            this.canvas.addEventListener('touchend', this.handlerTouchEnd());\n            this.canvas.addEventListener('touchmove', this.handlerTouchMove());\n            this.canvas.addEventListener('wheel', this.handlerMouseWheel());\n\n            window.addEventListener('resize', this.handlerResize());\n        }\n    }\n\n    // canvas\u306E\u30EA\u30B5\u30A4\u30BA\u3068\u89E3\u50CF\u5EA6\u8A2D\u5B9A\uFF08\u307C\u3084\u3051\u9632\u6B62\uFF09\n    // canvas\u306E\u5404\u7A2E\u8A2D\u5B9A\u306F\u6D88\u3048\u308B\n    resize() {\n        if (!this.canvas) {\n            return;\n        }\n        const dpr = window.devicePixelRatio;\n        const rect = this.canvas.getBoundingClientRect();\n        this.canvas.width = rect.width * dpr;\n        this.canvas.height = rect.height * dpr;\n        if (this.useOffScreen) {\n            if (!this.offScreen) {\n                this.offScreen = document.createElement('canvas');\n                console.log('offScreen created');\n            }\n            this.offScreen.width = rect.width * dpr;\n            this.offScreen.height = rect.height * dpr;\n        }\n\n        const context = this.canvas.getContext('2d');\n        if (!context) {\n            return;\n        }\n        context.scale(dpr, dpr);\n\n        if (this.offScreen) {\n            const ctx = this.offScreen.getContext('2d');\n            if (!ctx) {\n                return;\n            }\n        }\n\n        this.draw();\n    }\n\n    // \u73FE\u5728\u306E\u4E2D\u5FC3\u70B9\u3068\u65B0\u3057\u3044\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3067\u5730\u56F3\u3092\u63CF\u753B\u3059\u308B\n    // offsetX, offsetY\u306F\u30BA\u30FC\u30E0\u306E\u4E2D\u5FC3\u30D4\u30AF\u30BB\u30EB\uFF08\u3042\u3089\u304B\u3058\u3081makeCenter()\u3067\n    // \u4E2D\u5FC3\u70B9\u3092\u3053\u306E\u4F4D\u7F6E\u306B\u79FB\u52D5\u3057\u3066\u304A\u304F\u3053\u3068\u3002\u63CF\u753B\u5F8C\u306B\u4E2D\u5FC3\u70B9\u306F\u8868\u793A\u9818\u57DF\u306E\u4E2D\u5FC3\u306B\n    // \u518D\u8A2D\u5B9A\u3055\u308C\u308B\uFF09\u3002\u7701\u7565\u6642\u306Fcanvas\u306E\u4E2D\u5FC3\n    // zoom\u306F\u65B0\u3057\u3044\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u6307\u5B9A\u3059\u308B\u3002\u7701\u7565\u6642\u306F\u73FE\u5728\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\n    draw(offsetX?: number, offsetY?: number, zoom: number = this.zoom) {\n        if (!this.canvas || (this.useOffScreen && !this.offScreen)) {\n            return;\n        }\n\n        // Canvas\u306E\u30B5\u30A4\u30BA\u3092\u53D6\u5F97\n        const rect = this.canvas.getBoundingClientRect();\n        //console.log(rect);\n\n        const tilePixel = Geography.getTilePixelByZoom(zoom);\n        //console.log(`zoom: ${zoom}, pixel: ${tilePixel}`);\n\n        // \u8907\u6570\u306E\u5EA7\u6A19\u7CFB\u304C\u3042\u308B\u306E\u3067\u6CE8\u610F\n        //   \u7D4C\u7DEF\u5EA6\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u5EA6\u6570\u5358\u4F4D\u3002\u5317\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30E1\u30FC\u30C8\u30EB\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u30E1\u30FC\u30C8\u30EB\u5358\u4F4D\u3002\u5317\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30BF\u30A4\u30EBXY\uFF1B\u30B0\u30EA\u30CB\u30C3\u30B8/\u5317\u6975\u3092\u539F\u70B9\u3068\u3057\u305F\u30BF\u30A4\u30EB\u756A\u53F7\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u30D4\u30AF\u30BB\u30EB\u5358\u4F4D\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   Canvas\u5EA7\u6A19\uFF1A\u753B\u9762\u306Ecanvas\u30BF\u30B0\u9818\u57DF\u306E\u5DE6\u4E0A\u9685\u3092\u539F\u70B9\u3068\u3057\u305F\u30D4\u30AF\u30BB\u30EB\u5358\u4F4D\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n\n        // \u4E2D\u5FC3\u70B9\uFF08\u30E1\u30FC\u30C8\u30EB\uFF09\u3068\u4E2D\u5FC3\u30BF\u30A4\u30EBXY\u3092\u6C42\u3081\u308B\n        const center = Geography.degrees2meters(this.center.lat, this.center.lng);\n        //console.log(`center: ${center.x}/${center.y}`);\n        const tile = Geography.meters2tile(center.x, center.y, zoom);\n        //console.log(`tile: ${zoom}/${tile.x}/${tile.y}`);\n\n        // \u63CF\u753B\u958B\u59CB\u70B9\u306E\u30BF\u30A4\u30EB\u306EXY\u3092\u6C42\u3081\u308B\uFF08\u958B\u59CB\u70B9\u306ELat/Lng\u304C\u306F\u3063\u304D\u308A\u3057\u3066\u3044\u308B\u5834\u5408\uFF09\n        //const startTile = Geography.degrees2tile(this.latMax, this.lngMin, zoom);\n        // \u63CF\u753B\u958B\u59CB\u70B9\u306E\u30BF\u30A4\u30EB\u306EXY\u3092\u6C42\u3081\u308B\uFF08zoom\u3068\u8868\u793A\u9818\u57DF\u304B\u3089\u6C7A\u3081\u308B\u5834\u5408\uFF09\n        const mpp = Geography.getMetersPerPixelByZoom(zoom);\n        const ltx = center.x - (offsetX ?? rect.width / 2) * mpp;\n        const lty = center.y + (offsetY ?? rect.height / 2) * mpp;\n        const startTile = Geography.meters2tile(ltx, lty, zoom);\n\n        // \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\u306E\u8A08\u7B97\n        const world_meter = Geography.tile2meters(tile.x, tile.y, zoom);\n        const world = Geography.meter2world(world_meter.x, world_meter.y, zoom);\n        const world_center = Geography.meter2world(center.x, center.y, zoom);\n        //console.log(`world: ${world.x}, ${world.y}`);\n        //console.log(`world_center: ${world_center.x}, ${world_center.y}`);\n\n        // \u30BF\u30A4\u30EB\u304C\u5FC5\u8981\u306A\u7BC4\u56F2\u3092\u8A08\u7B97\u3059\u308B\n        // Canvas\u30B5\u30A4\u30BA\u304B\u3089\u3001\u5B9F\u969B\u306B\u8868\u793A\u53EF\u80FD\u306A\u30BF\u30A4\u30EB\u6570\u306F\u304A\u306E\u305A\u3068\u6C7A\u307E\u308B\n        //   rect: Canvas\n        //   world: \u4E2D\u5FC3\u30BF\u30A4\u30EB\u5DE6\u4E0A\u9685\u306E\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\n        //   world_center: \u5730\u56F3\u306E\u4E2D\u5FC3\u306E\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\n        //   tpx: \u30BF\u30A4\u30EB\u306E1\u8FBA\u306E\u30D4\u30AF\u30BB\u30EB\u6570(= 256)\n        //   cx, cy: canvas\u4E0A\u306E\u4E2D\u5FC3\u70B9\uFF08\u5C0F\u6570\u70B9\u672A\u6E80\u306F\u5207\u308A\u6368\u3066\uFF09\n        //   dx, dy: \u5730\u56F3\u306E\u4E2D\u5FC3\u70B9\u3068\u4E2D\u5FC3\u30BF\u30A4\u30EB\u5DE6\u4E0A\u9685\u3068\u306E\u5DEE\uFF09\n        const cx = offsetX ?? rect.width / 2;\n        const cy = offsetY ?? rect.height / 2;\n        //console.log(`rect: ${rect.width}x${rect.height}, center: [${cx},${cy}]`);\n\n        const dx = world_center.x - world.x;\n        const dy = world_center.y - world.y;\n        //console.log(`delta: [${dx},${dy}]`);\n\n        // 1. canvas\u306E\u30B5\u30A4\u30BA\u306B\u5FDC\u3058\u305F\u5FC5\u8981\u30BF\u30A4\u30EB\u6570\u3068\u306F\u307F\u51FA\u3057\u30D4\u30AF\u30BB\u30EB\u6570\u3092\u6C42\u3081\u308B\n        //    \u300C\u5DE6\u5074\u306F\u307F\u51FA\u3057\u300D\u3068\u3001\u300C\u30D5\u30EB\u8868\u793A+\u53F3\u5074\u306F\u307F\u51FA\u3057\u300D\u306B\u308F\u3051\u3066\u8003\u3048\u308B\u3002\n        //    \u5DE6\u5074\u306F\u307F\u51FA\u3057\u30D4\u30AF\u30BB\u30EB\u6570 modx = (cx - dx) % tpx\n        //    modx\u304C0\u306A\u3089\u306F\u307F\u3060\u3057\u306A\u3057\u30010\u4EE5\u4E0A\u306A\u3089\u5DE6\u306F\u307F\u3060\u3057\u3042\u308A\u3002\u305F\u3060\u3057\u8CA0\u6570\u306A\u3089\u753B\u9762\u5916\u306A\u306E\u3067\u63CF\u753B\u4E0D\u8981\n        //      tilexnum = modx\u3092\u9664\u3044\u305F\u90E8\u5206\u3092\u30AB\u30D0\u30FC\u3059\u308B\u30BF\u30A4\u30EB\u6570 + modx\u5206\u306E\u30BF\u30A4\u30EB\n        //      \u9AD8\u3055\u306B\u3064\u3044\u3066\u3082\u540C\u69D8\u306B\u8A08\u7B97\n        const modx = (cx - dx) % tilePixel;\n        const tilexnum = Math.ceil((rect.width - modx) / tilePixel) + (modx > 0 ? 1 : 0);\n        const mody = (cy - dy) % tilePixel;\n        const tileynum = Math.ceil((rect.height - mody) / tilePixel) + (mody > 0 ? 1 : 0);\n        //console.log(`tiles: ${tilexnum}x${tileynum}, moduler: ${modx},${mody}`);\n\n        // 2. Canvas\u306B\u30BF\u30A4\u30EB\u753B\u50CF\u3092\u6577\u304D\u8A70\u3081\u308B\u3002\n        //      ln + lm + tx + rm + rn\n        //      \u9AD8\u3055\u306B\u3064\u3044\u3066\u3082\u540C\u69D8\u306B\u8A08\u7B97\n        //      \u5DE6\u4E0A\u9685\u304B\u3089\u6577\u3044\u3066\u3044\u304F\n        const context = this.canvas.getContext('2d');\n        if (!context) {\n            return;\n        }\n\n        const ctx = this.offScreen ? this.offScreen.getContext('2d') : context;\n        if (ctx) {\n            if (this.debug) {\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = '#f00';\n                ctx.fillStyle = 'red';\n                ctx.textAlign = 'center';\n                ctx.textBaseline = 'middle';\n                ctx.font = '26px Arial';\n            }\n        } else {\n            return;\n        }\n\n        // \u30AA\u30D5\u30B9\u30AF\u30EA\u30FC\u30F3\u304B\u3089canvas\u306B\u8EE2\u9001\u3059\u308B\u969B\u306E\u30AA\u30D5\u30BB\u30C3\u30C8\u3092\u8A08\u7B97\n        // \u3053\u3061\u3089\u304C\u901F\u304F\u3067\u304D\u308B\u304C\u3001startTile\u304C\u30BF\u30A4\u30EB\u30DE\u30C3\u30D7\u306E\u6700\u521D\u3067\u306A\u3044\u3068\u3044\u3051\u306A\u3044\n        //const deltax = modx >= 0 ? modx - tilePixel : modx;\n        //const deltay = mody >= 0 ? mody - tilePixel : mody;\n        // \u3053\u3061\u3089\u304C\u6C4E\u7528\n        const startTile_meter = Geography.tile2meters(startTile.x, startTile.y, zoom);\n        const offsetX_meter = startTile_meter.x - ltx;\n        const offsetY_meter = lty - startTile_meter.y;\n        const deltax = offsetX_meter / mpp;\n        const deltay = offsetY_meter / mpp;\n\n        const tileNum = tilexnum * tileynum;\n        let tiles = 0;\n        for (const i of this.images) {\n            // cancel image loading\n            i.src = '';\n        }\n        this.images = [];\n        for (let x = 0; x < tilexnum; x++) {\n            for (let y = 0; y < tileynum; y++) {\n                const tx =\n                    startTile.x + x; /* + (modx > 0 ? -1 : 0) // lng\u6307\u5B9AstartTile\u306E\u5834\u5408\u306B\u5FC5\u8981 */\n                const ty =\n                    startTile.y + y; /* + (mody > 0 ? -1 : 0) // lat\u6307\u5B9AstartTile\u306E\u5834\u5408\u306B\u5FC5\u8981 */\n                const url = this.getMapURL(tx, ty, zoom);\n                const image = new Image();\n                this.images.push(image);\n                image.addEventListener('load', () => {\n                    const x2 = x * tilePixel + deltax;\n                    const y2 = y * tilePixel + deltay;\n                    if (this.offScreen) {\n                        // \u30AA\u30D5\u30B9\u30AF\u30EA\u30FC\u30F3\u306B\u63CF\u753B\n                        ctx.drawImage(image, x2, y2, tilePixel, tilePixel);\n\n                        // \u30BF\u30A4\u30EB\u306E\u5883\u754C\u3068\u30BF\u30A4\u30EBXY\u306E\u8868\u793A\n                        if (this.debug) {\n                            ctx.strokeRect(x2, y2, tilePixel, tilePixel);\n                            ctx.fillText(\n                                `${zoom}/${tx}/${ty}`,\n                                x2 + tilePixel / 2,\n                                y2 + tilePixel / 2,\n                            );\n                        }\n\n                        // \u30AA\u30D5\u30B9\u30AF\u30EA\u30FC\u30F3\u306E\u753B\u50CF\u3092canvas\u306B\u8EE2\u5199\u3059\u308B\n                        tiles++;\n                        if (tiles === tileNum) {\n                            context.drawImage(this.offScreen, 0, 0);\n                        }\n                    } else {\n                        // \u8868\u793A\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u306B\u76F4\u63A5\u63CF\u753B\n                        ctx.drawImage(image, x2, y2, tilePixel, tilePixel);\n\n                        // \u30BF\u30A4\u30EB\u306E\u5883\u754C\u3068\u30BF\u30A4\u30EBXY\u306E\u8868\u793A\n                        if (this.debug) {\n                            ctx.strokeRect(x2, y2, tilePixel, tilePixel);\n                            ctx.fillText(\n                                `${zoom}/${tx}/${ty}`,\n                                x2 + tilePixel / 2,\n                                y2 + tilePixel / 2,\n                            );\n                        }\n                    }\n                });\n                image.src = url;\n            }\n        }\n\n        // \u65B0\u3057\u3044\u30BA\u30FC\u30E0\u3092\u53CD\u6620\u3059\u308B\n        this.zoom = zoom;\n\n        // \u30DB\u30A4\u30FC\u30EB\u30A2\u30AF\u30B7\u30E7\u30F3\u306E\u5834\u5408\u3001\u4E2D\u5FC3\u70B9\u304C\u30DD\u30A4\u30F3\u30BF\u306E\u4F4D\u7F6E\u3068\u306A\u308B\u305F\u3081\n        // \u4E2D\u5FC3\u70B9\u3068\u5B9F\u969B\u306E\u8868\u793A\u306E\u4E2D\u5FC3\u304C\u305A\u308C\u308B\u3002\u305D\u306E\u305F\u3081\u30BA\u30FC\u30E0\u5909\u66F4\u5F8C\u306E\u65B0\u305F\u306A\n        // \u4E2D\u5FC3\u70B9\u3092\u8A08\u7B97\u3057\u3001\u8A2D\u5B9A\u3059\u308B\n        if (offsetX !== undefined && offsetY !== undefined) {\n            const rx = rect.width / 2 - offsetX;\n            const ry = rect.height / 2 - offsetY;\n            this.moveCenter(rx, ry);\n        }\n    }\n\n    // OpenStreetMap\u306A\u3069\u306E\u5730\u56F3\u753B\u50CF\u306B\u5BFE\u3059\u308BURL\u3092\u751F\u6210\u3059\u308B\n    getMapURL(x: number, y: number, zoom: number) {\n        const z = Math.round(zoom);\n        const tileMax = 1 << z;\n        x = x % tileMax;\n        if (x < 0) {\n            x = tileMax + x;\n        }\n        y = y % tileMax;\n        if (y < 0) {\n            y = tileMax + y;\n        }\n        return this.mapSource\n            .replace('{x}', String(x))\n            .replace('{y}', String(y))\n            .replace('{z}', String(z));\n    }\n\n    // GPX\u30C7\u30FC\u30BF\u3092\u30BB\u30C3\u30C8\u3059\u308B\n    // setView\u304Ctrue\u306E\u6642\u306F\u5730\u56F3\u306E\u4E2D\u5FC3\u70B9\u3084\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3082\u81EA\u52D5\u8ABF\u6574\u3055\u308C\u308B\n    setGPXData(gpxData: GPXData, setView: boolean = false) {\n        if (!gpxData || isNaN(gpxData.stats.center.lat) || isNaN(gpxData.stats.center.lng)) {\n            return;\n        }\n        this.gpxData = gpxData;\n\n        if (setView) {\n            this.adjustCenterByGPXData();\n            this.adjustZoomLevelByGPXData();\n        }\n    }\n\n    adjustCenterByGPXData() {\n        if (this.gpxData && this.gpxData.stats) {\n            const s = this.gpxData.stats;\n            this.latMax = s.latMax;\n            this.lngMin = s.lngMin;\n            this.setView(s.center);\n        }\n    }\n\n    // Canvas\u3068GPX\u30C7\u30FC\u30BF\u306E\u7BC4\u56F2\u3067\u9069\u5207\u306A\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u8A08\u7B97\u3057\u3066\u8A2D\u5B9A\u3059\u308B\n    adjustZoomLevelByGPXData(margin: number = 1.2): number | undefined {\n        if (!this.canvas) {\n            return;\n        }\n        if (!this.gpxData) {\n            return undefined;\n        }\n\n        // Canvas\u306E\u30B5\u30A4\u30BA\u3092\u53D6\u5F97\n        const rect = this.canvas.getBoundingClientRect();\n\n        // \u30ED\u30B0\u306E\u7BC4\u56F2(m)\u3092\u8A08\u7B97\n        const s = this.gpxData.stats;\n        const min = Geography.degrees2meters(s.latMin, s.lngMin);\n        const max = Geography.degrees2meters(s.latMax, s.lngMax);\n        const wm = (max.x - min.x) * margin;\n        const hm = (max.y - min.y) * margin;\n        //console.log(`width: ${wm}m, ${rect.width}px`);\n        //console.log(`height: ${hm}m, ${rect.height}px`);\n\n        // \u7BC4\u56F2\u306B\u53CE\u3081\u308B\u305F\u3081\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3001\u30BF\u30A4\u30EB\u6570\u3092\u6C42\u3081\u308B\n        // \u7E26\u6A2A\u305D\u308C\u305E\u308C\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u8A08\u7B97\u3057\u3001\u3088\u308A\u5C0F\u3055\u306A\u65B9\u3092\u53D6\u308B\n        const wz = Math.round(Geography.getZoomByMetersPerPixel(wm / rect.width));\n        const hz = Math.round(Geography.getZoomByMetersPerPixel(hm / rect.height));\n        this.zoom = wz < hz ? wz : hz;\n        console.log(`adjusted zoom level: ${this.zoom}`);\n    }\n\n    setMapSource(mapSource: string) {\n        this.mapSource = mapSource;\n    }\n\n    // \u5730\u56F3\u8868\u793A\u306E\u4E2D\u5FC3\u70B9\u3068\u30BA\u30FC\u30E0\u500D\u7387\u3092\u8A2D\u5B9A\u3059\u308B\n    setView(center: LatLngExpression, zoom?: number) {\n        this.center = new LatLng(center);\n        this.setZoom(zoom);\n    }\n\n    setZoom(zoom?: number) {\n        if (zoom && zoom > 0 && zoom < 30) {\n            this.zoom = zoom;\n        }\n    }\n\n    // \u4E2D\u5FC3\u70B9\u3092x,y\u30D4\u30AF\u30BB\u30EB\u5206\u79FB\u52D5\u3059\u308B\n    // \u79FB\u52D5\u65B9\u5411\u306F\u6B63\u306E\u6570\u306A\u3089\u5357\u6771\u65B9\u5411\n    moveCenter(dx: number, dy: number) {\n        const mpp = Geography.getMetersPerPixelByZoom(this.zoom);\n\n        // \u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u3092\u30E1\u30FC\u30C8\u30EB\u306B\u76F4\u3059\n        const center = Geography.degrees2meters(this.center.lat, this.center.lng);\n        // \u30D4\u30AF\u30BB\u30EB\u5897\u5206\u3092\u30E1\u30FC\u30C8\u30EB\u306B\u5909\u63DB\u3057\u3001\u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u306E\u30E1\u30FC\u30C8\u30EB\u306B\u52A0\u7B97\u3059\u308B\n        center.x += dx * mpp;\n        center.y -= dy * mpp;\n        // \u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u306E\u30E1\u30FC\u30C8\u30EB\u3092\u7D4C\u7DEF\u5EA6\u306B\u623B\u3059\n        const deg = Geography.meters2degrees(center.x, center.y);\n\n        // \u7DEF\u5EA6\u306E\u9650\u754C\n        if (deg.lat > 85.0) {\n            deg.lat = 85.0;\n        }\n        if (deg.lat < -85.0) {\n            deg.lat = -85.0;\n        }\n        // \u7D4C\u5EA6\u306E\u9650\u754C\n        if (deg.lng > 180.0) {\n            deg.lng -= 360.0;\n        }\n        if (deg.lng < -180.0) {\n            deg.lng += 360.0;\n        }\n\n        this.center.lat = deg.lat;\n        this.center.lng = deg.lng;\n    }\n\n    start({ offsetX: x, offsetY: y }: MouseEvent | Record<string, number>) {\n        this.isMoving = true;\n        this.oldPoint = { x, y };\n    }\n\n    stop() {\n        this.oldPoint = undefined;\n        this.isMoving = false;\n    }\n\n    // \u6307\u5B9A\u5EA7\u6A19\u306B\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n    move({ offsetX: x, offsetY: y }: MouseEvent | Record<string, number>) {\n        if (this.oldPoint) {\n            // \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\u306E\u5897\u5206\u3092\u6C42\u3081\u3066\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n            const dx = this.oldPoint.x - x;\n            const dy = this.oldPoint.y - y;\n            this.moveCenter(dx, dy);\n        }\n\n        this.oldPoint = { x, y };\n    }\n\n    handlerResize() {\n        return () => {\n            this.resize();\n        };\n    }\n\n    handlerMouseDown() {\n        return (e: MouseEvent) => {\n            if (this.canvas) {\n                this.canvas.style.cursor = 'grab';\n            }\n            this.start(e);\n        };\n    }\n\n    handlerMouseUp() {\n        return () => {\n            this.stop();\n            if (this.canvas) {\n                this.canvas.style.cursor = '';\n            }\n        };\n    }\n\n    handlerMouseMove() {\n        return (e: MouseEvent) => {\n            if (this.isMoving) {\n                if (this.canvas) {\n                    this.canvas.style.cursor = 'grabbing';\n                }\n                this.move(e);\n                this.draw();\n            }\n        };\n    }\n\n    handlerMouseLeave() {\n        return () => {\n            // this.stop();\n        };\n    }\n\n    handlerTouchStart() {\n        return (e: TouchEvent) => {\n            if (!this.canvas) {\n                return;\n            }\n            e.preventDefault();\n            const rect = this.canvas.getBoundingClientRect();\n\n            // \u30BF\u30C3\u30C1\u72B6\u614B\u3092\u4FDD\u5B58\n            const ts = this.touchMap;\n            const len = Object.keys(ts).length;\n            for (let i = 0; i < e.changedTouches.length; i++) {\n                const t = e.changedTouches[i];\n                const v = { id: t.identifier, x: t.pageX - rect.left, y: t.pageY - rect.top };\n                ts[t.identifier] = v;\n            }\n\n            // \u30BF\u30C3\u30C1\u72B6\u614B\u3092\u30BF\u30C3\u30C1\u9806\u306B\u914D\u5217\u5316\n            this.touchList = Object.values(ts).sort((a, b) => a.id - b.id);\n            if (len === 0) {\n                // \u6700\u521D\u306E\u6307\u306A\u3089\u3070\u30BF\u30C3\u30C1\u958B\u59CB;\n                this.start({\n                    offsetX: this.touchList[0].x,\n                    offsetY: this.touchList[0].y,\n                });\n            }\n        };\n    }\n\n    handlerTouchEnd() {\n        return (e: TouchEvent) => {\n            if (!this.canvas) {\n                return;\n            }\n            //e.preventDefault();\n\n            // \u30BF\u30C3\u30C1\u72B6\u614B\u3092\u4FDD\u5B58\n            const ts = this.touchMap;\n            for (let i = 0; i < e.changedTouches.length; i++) {\n                const t = e.changedTouches[i];\n                if (this.touchList.length > 0 && this.touchList[0].id === t.identifier) {\n                    // \u4E00\u756A\u53E4\u3044\u6307\u304C\u96E2\u308C\u305F\u306A\u3089\u3070\u3044\u3063\u305F\u3093\u505C\u6B62\n                    this.stop();\n                }\n                delete ts[t.identifier];\n            }\n\n            // \u30BF\u30C3\u30C1\u72B6\u614B\u3092\u30BF\u30C3\u30C1\u9806\u306B\u914D\u5217\u5316\n            this.touchList = Object.values(ts).sort((a, b) => a.id - b.id);\n            if (!this.isMoving && this.touchList.length > 0) {\n                // \u30BF\u30C3\u30C1\u304C\u505C\u6B62\u3057\u3066\u3044\u308B\u3068\u304D\u3001\u6B21\u306E\u6307\u304C\u5B58\u5728\u3059\u308B\u5834\u5408\u306F\u6B21\u306E\u6307\u3067\u30BF\u30C3\u30C1\u518D\u958B\n                this.start({\n                    offsetX: this.touchList[0].x,\n                    offsetY: this.touchList[0].y,\n                });\n            }\n        };\n    }\n\n    handlerTouchMove() {\n        return (e: TouchEvent) => {\n            if (!this.canvas) {\n                return;\n            }\n            //e.preventDefault();\n            const rect = this.canvas.getBoundingClientRect();\n\n            const ts = this.touchMap;\n            for (let i = 0; i < e.changedTouches.length; i++) {\n                const t = e.changedTouches[i];\n                let v = ts[t.identifier];\n                if (v) {\n                    v.old = {\n                        x: v.x,\n                        y: v.y,\n                    };\n                    v.x = t.pageX - rect.left;\n                    v.y = t.pageY - rect.top;\n                } else {\n                    v = { id: t.identifier, x: t.pageX - rect.left, y: t.pageY - rect.top };\n                    ts[t.identifier] = v;\n                }\n            }\n            this.touchList = Object.values(ts).sort((a, b) => a.id - b.id);\n\n            // \uFF11\u672C\u76EE\u306E\u30BF\u30C3\u30C1\u60C5\u5831\n            const t0 = this.touchList[0];\n            if (t0.old) {\n                // \uFF11\u672C\u76EE\u306E\u79FB\u52D5\u91CF\n                const d0x = t0.old.x - t0.x;\n                const d0y = t0.old.y - t0.y;\n\n                if (this.touchList.length >= 2) {\n                    // \uFF12\u672C\u76EE\u306E\u30BF\u30C3\u30C1\u60C5\u5831\n                    const t1 = this.touchList[1];\n                    if (t1.old) {\n                        // \uFF12\u672C\u76EE\u306E\u79FB\u52D5\u91CF\n                        const d1x = t1.old.x - t1.x;\n                        const d1y = t1.old.y - t1.y;\n\n                        // \uFF11\u672C\u76EE\u3068\uFF12\u672C\u76EE\u306E\u79FB\u52D5\u91CF\u306E\u5E73\u5747\u5206\u3001\u4E2D\u5FC3\u70B9\u3092\u305A\u3089\u3059\u3002\n                        const dx = (d0x + d1x) / 2;\n                        const dy = (d0y + d1y) / 2;\n\n                        // \u30D4\u30F3\u30C1\u30A4\u30F3\u30FB\u30A2\u30A6\u30C8\u306E\u6700\u7D42\u7684\u306A\u4E2D\u5FC3\u4F4D\u7F6E\u3092\u6C42\u3081\u308B\n                        const rx = (t0.x + t1.x) / 2;\n                        const ry = (t0.y + t1.y) / 2;\n                        this.moveCenter(rx - rect.width / 2 + dx, ry - rect.height / 2 + dy);\n\n                        // \u30D4\u30F3\u30C1\u30A4\u30F3\u30FB\u30A2\u30A6\u30C8\n                        // \uFF11\u672C\u76EE\u3068\uFF12\u672C\u76EE\u306E\u79FB\u52D5\u5834\u6240\u3001\u79FB\u52D5\u91CF\u304B\u3089\u30BA\u30FC\u30E0\u306E\u5909\u5316\u3092\u8A08\u7B97\u3059\u308B\n                        const rb = Math.sqrt(\n                            (t0.old.x - t1.old.x) ** 2 + (t0.old.y - t1.old.y) ** 2,\n                        );\n                        const ra = Math.sqrt((t0.x - t1.x) ** 2 + (t0.y - t1.y) ** 2);\n                        const mpp = Geography.getMetersPerPixelByZoom(this.zoom);\n                        const z = Geography.getZoomByMetersPerPixel((mpp * rb) / ra);\n\n                        // \u63CF\u753B\u3059\u308B\n                        this.draw(rx, ry, z);\n\n                        return;\n                    }\n                }\n            }\n\n            // drag\n            this.move({\n                offsetX: t0.x,\n                offsetY: t0.y,\n            });\n            this.draw();\n        };\n    }\n\n    handlerMouseWheel() {\n        return (e: WheelEvent) => {\n            if (!this.canvas) {\n                return;\n            }\n            e.preventDefault();\n\n            // \u30DB\u30A4\u30FC\u30EB\u64CD\u4F5C\u958B\u59CB\u4F4D\u7F6E\u3092\u4E2D\u5FC3\u306B\u62E1\u5927\u7E2E\u5C0F\u3059\u308B\u305F\u3081\u306B\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n            const x = e.offsetX;\n            const y = e.offsetY;\n            const rect = this.canvas.getBoundingClientRect();\n            const dx = x - rect.width / 2;\n            const dy = y - rect.height / 2;\n            this.moveCenter(dx, dy);\n\n            let z = this.zoom;\n            if (e.deltaY < 0) {\n                z += 0.1;\n                if (z > this.zoomMax) z = this.zoomMax;\n            } else if (e.deltaY > 0) {\n                z += -0.1;\n                if (z < this.zoomMin) z = this.zoomMin;\n            } else {\n                return;\n            }\n            //this.zoom = z;\n\n            this.draw(x, y, z);\n        };\n    }\n}\n", "import { Mapricorn, type MapricornOptions } from './mapricorn.js';\n\ndeclare global {\n    interface Window {\n        Mapricorn: (opts: MapricornOptions) => void;\n    }\n}\n\nif (window) {\n    window.Mapricorn = (opts?: MapricornOptions) => {\n        return new Mapricorn(opts);\n    };\n}\n"],
  "mappings": "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",
  "names": ["formatNum", "num", "precision", "pow", "LatLng", "_LatLng", "a", "b", "c", "__publicField", "a2", "otherLatLng", "maxMargin", "obj", "Geography", "_Geography", "zoom", "lat", "lng", "x", "y", "mx", "my", "r", "mpp", "world_px", "world_py", "Mapricorn", "opts", "__publicField", "LatLng", "container", "context", "dpr", "rect", "offsetX", "offsetY", "zoom", "tilePixel", "Geography", "center", "tile", "mpp", "ltx", "lty", "startTile", "world_meter", "world", "world_center", "cx", "cy", "dx", "dy", "modx", "tilexnum", "mody", "tileynum", "ctx", "startTile_meter", "offsetX_meter", "offsetY_meter", "deltax", "deltay", "tileNum", "tiles", "i", "x", "y", "tx", "ty", "url", "image", "x2", "y2", "rx", "ry", "z", "tileMax", "gpxData", "setView", "s", "margin", "min", "max", "wm", "hm", "wz", "hz", "mapSource", "deg", "e", "ts", "len", "t", "v", "a", "b", "t0", "d0x", "d0y", "t1", "d1x", "d1y", "rb", "ra", "opts", "Mapricorn"]
}
