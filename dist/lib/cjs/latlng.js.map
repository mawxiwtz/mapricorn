{
  "version": 3,
  "sources": ["../../../src/latlng.ts"],
  "sourcesContent": ["export function formatNum(num: number, precision?: number) {\n    const pow = Math.pow(10, precision === undefined ? 6 : precision);\n    return Math.round(num * pow) / pow;\n}\n\n// \u7D4C\u7DEF\u5EA6\u3001\u9AD8\u5EA6\u3092\u6271\u3046\u30AF\u30E9\u30B9\nexport class LatLng {\n    lat: number = 0.0;\n    lng: number = 0.0;\n    alt?: number | undefined;\n\n    // overloads\n    constructor(latitude: number, longitude: number, altitude?: number);\n    constructor(latitude: LatLngExpression);\n\n    constructor(a: number | LatLngExpression, b?: number, c?: number) {\n        if (a instanceof LatLng) {\n            // (LatLng object)\n            return a;\n        }\n        if (Array.isArray(a) && typeof a[0] !== 'object') {\n            // ([x, y, z])\n            if (a.length === 3) {\n                return new LatLng(a[0], a[1], a[2]);\n            }\n            // ([x, y])\n            if (a.length === 2) {\n                return new LatLng(a[0], a[1]);\n            }\n            throw new Error('Invalid parameters');\n        }\n        if (a === undefined || a === null) {\n            return a;\n        }\n        if (typeof a === 'object' && 'lat' in a) {\n            // ({lat: x, lng: y, ati: z})\n            return new LatLng(a.lat, a.lng, a.alt);\n        }\n        if (b === undefined) {\n            throw new Error('Invalid parameters');\n        }\n\n        // (x, y, z)\n        const a2 = a as unknown as number;\n\n        if (isNaN(a2) || isNaN(b)) {\n            throw new Error('Invalid LatLng object: (' + a2 + ', ' + b + ')');\n        }\n\n        this.lat = a2;\n\n        this.lng = b;\n\n        if (c !== undefined) {\n            this.alt = c;\n        }\n    }\n\n    equals(otherLatLng: LatLngExpression, maxMargin?: number): boolean {\n        if (!otherLatLng) {\n            return false;\n        }\n\n        const obj = new LatLng(otherLatLng);\n\n        const margin = Math.max(Math.abs(this.lat - obj!.lat), Math.abs(this.lng - obj!.lng));\n\n        return margin <= (maxMargin === undefined ? 1.0e-9 : maxMargin);\n    }\n\n    toString(precision: number): string {\n        return (\n            'LatLng(' + formatNum(this.lat, precision) + ', ' + formatNum(this.lng, precision) + ')'\n        );\n    }\n\n    /*\n    distanceTo(otherLatLng: LatLngExpression): number {\n        return Earth.distance(this, toLatLng(otherLatLng));\n    }\n\n    wrap(): LatLng {\n        return Earth.wrapLatLng(this);\n    }\n\n    toBounds(sizeInMeters: number): LatLngBounds {\n        const latAccuracy = (180 * sizeInMeters) / 40075017,\n            lngAccuracy = latAccuracy / Math.cos((Math.PI / 180) * this.lat);\n\n        return toLatLngBounds(\n            [this.lat - latAccuracy, this.lng - lngAccuracy],\n            [this.lat + latAccuracy, this.lng + lngAccuracy],\n        );\n    }\n    */\n\n    clone(): LatLng {\n        return new LatLng(this.lat, this.lng, this.alt);\n    }\n}\n\nexport interface LatLngLiteral {\n    lat: number; // \u7DEF\u5EA6\n    lng: number; // \u7D4C\u5EA6\n    alt?: number; // \u9AD8\u5EA6\n}\n\nexport type LatLngTuple = [number, number, number?];\n\nexport type LatLngExpression = LatLng | LatLngLiteral | LatLngTuple;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,SAAS,UAAU,KAAa,WAAoB;AACvD,QAAM,MAAM,KAAK,IAAI,IAAI,cAAc,SAAY,IAAI,SAAS;AAChE,SAAO,KAAK,MAAM,MAAM,GAAG,IAAI;AACnC;AAGO,MAAM,OAAO;AAAA,EAChB,MAAc;AAAA,EACd,MAAc;AAAA,EACd;AAAA,EAMA,YAAY,GAA8B,GAAY,GAAY;AAC9D,QAAI,aAAa,QAAQ;AAErB,aAAO;AAAA,IACX;AACA,QAAI,MAAM,QAAQ,CAAC,KAAK,OAAO,EAAE,CAAC,MAAM,UAAU;AAE9C,UAAI,EAAE,WAAW,GAAG;AAChB,eAAO,IAAI,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAAA,MACtC;AAEA,UAAI,EAAE,WAAW,GAAG;AAChB,eAAO,IAAI,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAAA,MAChC;AACA,YAAM,IAAI,MAAM,oBAAoB;AAAA,IACxC;AACA,QAAI,MAAM,UAAa,MAAM,MAAM;AAC/B,aAAO;AAAA,IACX;AACA,QAAI,OAAO,MAAM,YAAY,SAAS,GAAG;AAErC,aAAO,IAAI,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG;AAAA,IACzC;AACA,QAAI,MAAM,QAAW;AACjB,YAAM,IAAI,MAAM,oBAAoB;AAAA,IACxC;AAGA,UAAM,KAAK;AAEX,QAAI,MAAM,EAAE,KAAK,MAAM,CAAC,GAAG;AACvB,YAAM,IAAI,MAAM,6BAA6B,KAAK,OAAO,IAAI,GAAG;AAAA,IACpE;AAEA,SAAK,MAAM;AAEX,SAAK,MAAM;AAEX,QAAI,MAAM,QAAW;AACjB,WAAK,MAAM;AAAA,IACf;AAAA,EACJ;AAAA,EAEA,OAAO,aAA+B,WAA6B;AAC/D,QAAI,CAAC,aAAa;AACd,aAAO;AAAA,IACX;AAEA,UAAM,MAAM,IAAI,OAAO,WAAW;AAElC,UAAM,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,MAAM,IAAK,GAAG,GAAG,KAAK,IAAI,KAAK,MAAM,IAAK,GAAG,CAAC;AAEpF,WAAO,WAAW,cAAc,SAAY,OAAS;AAAA,EACzD;AAAA,EAEA,SAAS,WAA2B;AAChC,WACI,YAAY,UAAU,KAAK,KAAK,SAAS,IAAI,OAAO,UAAU,KAAK,KAAK,SAAS,IAAI;AAAA,EAE7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBA,QAAgB;AACZ,WAAO,IAAI,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAAA,EAClD;AACJ;",
  "names": []
}
