{
  "version": 3,
  "sources": ["../../../src/mapricorn.ts"],
  "sourcesContent": ["import { LatLng, type LatLngExpression } from './latlng.js';\nimport type { GPXData } from './gpx.js';\nimport { Geography } from './geography.js';\n\ntype TouchInfo = {\n    id: number;\n    x: number;\n    y: number;\n    old?: {\n        x: number;\n        y: number;\n    };\n};\n\nexport type MapricornOptions = {\n    container?: HTMLElement;\n    width?: string;\n    height?: string;\n    mapSource?: string;\n    center?: LatLngExpression;\n    zoom?: number;\n};\n\n// \u5730\u56F3\u8868\u793A\u3092\u884C\u3046\u30AF\u30E9\u30B9\nexport class Mapricorn {\n    debug = false;\n    container?: HTMLElement;\n    width = '';\n    height = '';\n    canvas?: HTMLCanvasElement;\n    mapSource = 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n    //mapSource = '/map/osm/{z}/{x}/{y}.png';\n    offScreen?: HTMLCanvasElement;\n    useOffScreen = true;\n    gpxData?: GPXData;\n    center: LatLng;\n    zoom: number = 1;\n    zoomMax = 19;\n    zoomMin = 0;\n    latMax: number = 0;\n    lngMin: number = 0;\n    oldPoint?: { x: number; y: number };\n    isMoving = false;\n    touchMap: Record<number, TouchInfo> = {};\n    touchList: TouchInfo[] = [];\n    images: HTMLImageElement[] = [];\n\n    constructor(opts?: MapricornOptions) {\n        this.center = new LatLng([0, 0, 0]);\n        if (opts) {\n            if (opts.mapSource) {\n                this.mapSource = opts.mapSource;\n            }\n            if (opts.center) {\n                this.center = new LatLng(opts.center);\n            }\n            if (opts.zoom) {\n                this.setZoom(opts.zoom);\n            }\n            if (opts.width) {\n                this.width = opts.width;\n            }\n            if (opts.height) {\n                this.height = opts.height;\n            }\n            if (opts.container) {\n                this.bind(opts.container);\n            }\n        }\n    }\n\n    bind(container: HTMLElement) {\n        if (container === undefined) {\n            throw new Error('Invalid container');\n        }\n        this.container = container;\n        this.setup();\n        this.resize();\n    }\n\n    // canvas\u306E\u521D\u671F\u8A2D\u5B9A\n    setup() {\n        if (!this.container) {\n            return;\n        }\n        this.container.style.position = 'relative';\n        if (this.width) {\n            this.container.style.width = this.width;\n        }\n        if (this.height) {\n            this.container.style.height = this.height;\n        }\n\n        if (!this.canvas) {\n            this.canvas = document.createElement('canvas');\n            this.container.appendChild(this.canvas);\n            this.canvas.style.width = '100%';\n            this.canvas.style.height = '100%';\n\n            const context = this.canvas.getContext('2d');\n            if (!context) {\n                return;\n            }\n            context.lineWidth = 1;\n            context.strokeStyle = '#fff';\n\n            this.canvas.addEventListener('mousedown', this.handlerMouseDown());\n            this.canvas.addEventListener('mouseup', this.handlerMouseUp());\n            this.canvas.addEventListener('mousemove', this.handlerMouseMove());\n            this.canvas.addEventListener('mouseleave', this.handlerMouseLeave());\n            this.canvas.addEventListener('touchstart', this.handlerTouchStart());\n            this.canvas.addEventListener('touchend', this.handlerTouchEnd());\n            this.canvas.addEventListener('touchmove', this.handlerTouchMove());\n            this.canvas.addEventListener('wheel', this.handlerMouseWheel());\n\n            window.addEventListener('resize', this.handlerResize());\n        }\n    }\n\n    // canvas\u306E\u30EA\u30B5\u30A4\u30BA\u3068\u89E3\u50CF\u5EA6\u8A2D\u5B9A\uFF08\u307C\u3084\u3051\u9632\u6B62\uFF09\n    // canvas\u306E\u5404\u7A2E\u8A2D\u5B9A\u306F\u6D88\u3048\u308B\n    resize() {\n        if (!this.canvas) {\n            return;\n        }\n        const dpr = window.devicePixelRatio;\n        const rect = this.canvas.getBoundingClientRect();\n        this.canvas.width = rect.width * dpr;\n        this.canvas.height = rect.height * dpr;\n        if (this.useOffScreen) {\n            if (!this.offScreen) {\n                this.offScreen = document.createElement('canvas');\n            }\n            this.offScreen.width = rect.width * dpr;\n            this.offScreen.height = rect.height * dpr;\n        }\n\n        const context = this.canvas.getContext('2d');\n        if (!context) {\n            return;\n        }\n        context.scale(dpr, dpr);\n\n        if (this.offScreen) {\n            const ctx = this.offScreen.getContext('2d');\n            if (!ctx) {\n                return;\n            }\n        }\n\n        this.draw();\n    }\n\n    // \u73FE\u5728\u306E\u4E2D\u5FC3\u70B9\u3068\u65B0\u3057\u3044\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3067\u5730\u56F3\u3092\u63CF\u753B\u3059\u308B\n    // offsetX, offsetY\u306F\u30BA\u30FC\u30E0\u306E\u4E2D\u5FC3\u30D4\u30AF\u30BB\u30EB\uFF08\u3042\u3089\u304B\u3058\u3081makeCenter()\u3067\n    // \u4E2D\u5FC3\u70B9\u3092\u3053\u306E\u4F4D\u7F6E\u306B\u79FB\u52D5\u3057\u3066\u304A\u304F\u3053\u3068\u3002\u63CF\u753B\u5F8C\u306B\u4E2D\u5FC3\u70B9\u306F\u8868\u793A\u9818\u57DF\u306E\u4E2D\u5FC3\u306B\n    // \u518D\u8A2D\u5B9A\u3055\u308C\u308B\uFF09\u3002\u7701\u7565\u6642\u306Fcanvas\u306E\u4E2D\u5FC3\n    // zoom\u306F\u65B0\u3057\u3044\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u6307\u5B9A\u3059\u308B\u3002\u7701\u7565\u6642\u306F\u73FE\u5728\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\n    draw(offsetX?: number, offsetY?: number, zoom: number = this.zoom) {\n        if (!this.canvas || (this.useOffScreen && !this.offScreen)) {\n            return;\n        }\n\n        // Canvas\u306E\u30B5\u30A4\u30BA\u3092\u53D6\u5F97\n        const rect = this.canvas.getBoundingClientRect();\n\n        const tilePixel = Geography.getTilePixelByZoom(zoom);\n\n        // \u8907\u6570\u306E\u5EA7\u6A19\u7CFB\u304C\u3042\u308B\u306E\u3067\u6CE8\u610F\n        //   \u7D4C\u7DEF\u5EA6\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u5EA6\u6570\u5358\u4F4D\u3002\u5317\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30E1\u30FC\u30C8\u30EB\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u30E1\u30FC\u30C8\u30EB\u5358\u4F4D\u3002\u5317\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30BF\u30A4\u30EBXY\uFF1B\u30B0\u30EA\u30CB\u30C3\u30B8/\u5317\u6975\u3092\u539F\u70B9\u3068\u3057\u305F\u30BF\u30A4\u30EB\u756A\u53F7\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u30D4\u30AF\u30BB\u30EB\u5358\u4F4D\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   Canvas\u5EA7\u6A19\uFF1A\u753B\u9762\u306Ecanvas\u30BF\u30B0\u9818\u57DF\u306E\u5DE6\u4E0A\u9685\u3092\u539F\u70B9\u3068\u3057\u305F\u30D4\u30AF\u30BB\u30EB\u5358\u4F4D\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n\n        // \u4E2D\u5FC3\u70B9\uFF08\u30E1\u30FC\u30C8\u30EB\uFF09\u3068\u4E2D\u5FC3\u30BF\u30A4\u30EBXY\u3092\u6C42\u3081\u308B\n        const center = Geography.degrees2meters(this.center.lat, this.center.lng);\n        const tile = Geography.meters2tile(center.x, center.y, zoom);\n\n        // \u63CF\u753B\u958B\u59CB\u70B9\u306E\u30BF\u30A4\u30EB\u306EXY\u3092\u6C42\u3081\u308B\uFF08\u958B\u59CB\u70B9\u306ELat/Lng\u304C\u306F\u3063\u304D\u308A\u3057\u3066\u3044\u308B\u5834\u5408\uFF09\n        //const startTile = Geography.degrees2tile(this.latMax, this.lngMin, zoom);\n        // \u63CF\u753B\u958B\u59CB\u70B9\u306E\u30BF\u30A4\u30EB\u306EXY\u3092\u6C42\u3081\u308B\uFF08zoom\u3068\u8868\u793A\u9818\u57DF\u304B\u3089\u6C7A\u3081\u308B\u5834\u5408\uFF09\n        const mpp = Geography.getMetersPerPixelByZoom(zoom);\n        const ltx = center.x - (offsetX ?? rect.width / 2) * mpp;\n        const lty = center.y + (offsetY ?? rect.height / 2) * mpp;\n        const startTile = Geography.meters2tile(ltx, lty, zoom);\n\n        // \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\u306E\u8A08\u7B97\n        const world_meter = Geography.tile2meters(tile.x, tile.y, zoom);\n        const world = Geography.meter2world(world_meter.x, world_meter.y, zoom);\n        const world_center = Geography.meter2world(center.x, center.y, zoom);\n\n        // \u30BF\u30A4\u30EB\u304C\u5FC5\u8981\u306A\u7BC4\u56F2\u3092\u8A08\u7B97\u3059\u308B\n        // Canvas\u30B5\u30A4\u30BA\u304B\u3089\u3001\u5B9F\u969B\u306B\u8868\u793A\u53EF\u80FD\u306A\u30BF\u30A4\u30EB\u6570\u306F\u304A\u306E\u305A\u3068\u6C7A\u307E\u308B\n        //   rect: Canvas\n        //   world: \u4E2D\u5FC3\u30BF\u30A4\u30EB\u5DE6\u4E0A\u9685\u306E\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\n        //   world_center: \u5730\u56F3\u306E\u4E2D\u5FC3\u306E\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\n        //   tpx: \u30BF\u30A4\u30EB\u306E1\u8FBA\u306E\u30D4\u30AF\u30BB\u30EB\u6570(= 256)\n        //   cx, cy: canvas\u4E0A\u306E\u4E2D\u5FC3\u70B9\uFF08\u5C0F\u6570\u70B9\u672A\u6E80\u306F\u5207\u308A\u6368\u3066\uFF09\n        //   dx, dy: \u5730\u56F3\u306E\u4E2D\u5FC3\u70B9\u3068\u4E2D\u5FC3\u30BF\u30A4\u30EB\u5DE6\u4E0A\u9685\u3068\u306E\u5DEE\uFF09\n        const cx = offsetX ?? rect.width / 2;\n        const cy = offsetY ?? rect.height / 2;\n\n        const dx = world_center.x - world.x;\n        const dy = world_center.y - world.y;\n\n        // 1. canvas\u306E\u30B5\u30A4\u30BA\u306B\u5FDC\u3058\u305F\u5FC5\u8981\u30BF\u30A4\u30EB\u6570\u3068\u306F\u307F\u51FA\u3057\u30D4\u30AF\u30BB\u30EB\u6570\u3092\u6C42\u3081\u308B\n        //    \u300C\u5DE6\u5074\u306F\u307F\u51FA\u3057\u300D\u3068\u3001\u300C\u30D5\u30EB\u8868\u793A+\u53F3\u5074\u306F\u307F\u51FA\u3057\u300D\u306B\u308F\u3051\u3066\u8003\u3048\u308B\u3002\n        //    \u5DE6\u5074\u306F\u307F\u51FA\u3057\u30D4\u30AF\u30BB\u30EB\u6570 modx = (cx - dx) % tpx\n        //    modx\u304C0\u306A\u3089\u306F\u307F\u3060\u3057\u306A\u3057\u30010\u4EE5\u4E0A\u306A\u3089\u5DE6\u306F\u307F\u3060\u3057\u3042\u308A\u3002\u305F\u3060\u3057\u8CA0\u6570\u306A\u3089\u753B\u9762\u5916\u306A\u306E\u3067\u63CF\u753B\u4E0D\u8981\n        //      tilexnum = modx\u3092\u9664\u3044\u305F\u90E8\u5206\u3092\u30AB\u30D0\u30FC\u3059\u308B\u30BF\u30A4\u30EB\u6570 + modx\u5206\u306E\u30BF\u30A4\u30EB\n        //      \u9AD8\u3055\u306B\u3064\u3044\u3066\u3082\u540C\u69D8\u306B\u8A08\u7B97\n        const modx = (cx - dx) % tilePixel;\n        const tilexnum = Math.ceil((rect.width - modx) / tilePixel) + (modx > 0 ? 1 : 0);\n        const mody = (cy - dy) % tilePixel;\n        const tileynum = Math.ceil((rect.height - mody) / tilePixel) + (mody > 0 ? 1 : 0);\n\n        // 2. Canvas\u306B\u30BF\u30A4\u30EB\u753B\u50CF\u3092\u6577\u304D\u8A70\u3081\u308B\u3002\n        //      ln + lm + tx + rm + rn\n        //      \u9AD8\u3055\u306B\u3064\u3044\u3066\u3082\u540C\u69D8\u306B\u8A08\u7B97\n        //      \u5DE6\u4E0A\u9685\u304B\u3089\u6577\u3044\u3066\u3044\u304F\n        const context = this.canvas.getContext('2d');\n        if (!context) {\n            return;\n        }\n\n        const ctx = this.offScreen ? this.offScreen.getContext('2d') : context;\n        if (ctx) {\n            if (this.debug) {\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = '#f00';\n                ctx.fillStyle = 'red';\n                ctx.textAlign = 'center';\n                ctx.textBaseline = 'middle';\n                ctx.font = '26px Arial';\n            }\n        } else {\n            return;\n        }\n\n        // \u30AA\u30D5\u30B9\u30AF\u30EA\u30FC\u30F3\u304B\u3089canvas\u306B\u8EE2\u9001\u3059\u308B\u969B\u306E\u30AA\u30D5\u30BB\u30C3\u30C8\u3092\u8A08\u7B97\n        // \u3053\u3061\u3089\u304C\u901F\u304F\u3067\u304D\u308B\u304C\u3001startTile\u304C\u30BF\u30A4\u30EB\u30DE\u30C3\u30D7\u306E\u6700\u521D\u3067\u306A\u3044\u3068\u3044\u3051\u306A\u3044\n        //const deltax = modx >= 0 ? modx - tilePixel : modx;\n        //const deltay = mody >= 0 ? mody - tilePixel : mody;\n        // \u3053\u3061\u3089\u304C\u6C4E\u7528\n        const startTile_meter = Geography.tile2meters(startTile.x, startTile.y, zoom);\n        const offsetX_meter = startTile_meter.x - ltx;\n        const offsetY_meter = lty - startTile_meter.y;\n        const deltax = offsetX_meter / mpp;\n        const deltay = offsetY_meter / mpp;\n\n        const tileNum = tilexnum * tileynum;\n        let tiles = 0;\n        for (const i of this.images) {\n            // cancel image loading\n            i.src = '';\n        }\n        this.images = [];\n        for (let x = 0; x < tilexnum; x++) {\n            for (let y = 0; y < tileynum; y++) {\n                const tx =\n                    startTile.x + x; /* + (modx > 0 ? -1 : 0) // lng\u6307\u5B9AstartTile\u306E\u5834\u5408\u306B\u5FC5\u8981 */\n                const ty =\n                    startTile.y + y; /* + (mody > 0 ? -1 : 0) // lat\u6307\u5B9AstartTile\u306E\u5834\u5408\u306B\u5FC5\u8981 */\n                const url = this.getMapURL(tx, ty, zoom);\n                const image = new Image();\n                this.images.push(image);\n                image.addEventListener('load', () => {\n                    const x2 = x * tilePixel + deltax;\n                    const y2 = y * tilePixel + deltay;\n                    if (this.offScreen) {\n                        // \u30AA\u30D5\u30B9\u30AF\u30EA\u30FC\u30F3\u306B\u63CF\u753B\n                        ctx.drawImage(image, x2, y2, tilePixel, tilePixel);\n\n                        // \u30BF\u30A4\u30EB\u306E\u5883\u754C\u3068\u30BF\u30A4\u30EBXY\u306E\u8868\u793A\n                        if (this.debug) {\n                            ctx.strokeRect(x2, y2, tilePixel, tilePixel);\n                            ctx.fillText(\n                                `${zoom}/${tx}/${ty}`,\n                                x2 + tilePixel / 2,\n                                y2 + tilePixel / 2,\n                            );\n                        }\n\n                        // \u30AA\u30D5\u30B9\u30AF\u30EA\u30FC\u30F3\u306E\u753B\u50CF\u3092canvas\u306B\u8EE2\u5199\u3059\u308B\n                        tiles++;\n                        if (tiles === tileNum) {\n                            context.drawImage(this.offScreen, 0, 0);\n                        }\n                    } else {\n                        // \u8868\u793A\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u306B\u76F4\u63A5\u63CF\u753B\n                        ctx.drawImage(image, x2, y2, tilePixel, tilePixel);\n\n                        // \u30BF\u30A4\u30EB\u306E\u5883\u754C\u3068\u30BF\u30A4\u30EBXY\u306E\u8868\u793A\n                        if (this.debug) {\n                            ctx.strokeRect(x2, y2, tilePixel, tilePixel);\n                            ctx.fillText(\n                                `${zoom}/${tx}/${ty}`,\n                                x2 + tilePixel / 2,\n                                y2 + tilePixel / 2,\n                            );\n                        }\n                    }\n                });\n                image.src = url;\n            }\n        }\n\n        // \u65B0\u3057\u3044\u30BA\u30FC\u30E0\u3092\u53CD\u6620\u3059\u308B\n        this.zoom = zoom;\n\n        // \u30DB\u30A4\u30FC\u30EB\u30A2\u30AF\u30B7\u30E7\u30F3\u306E\u5834\u5408\u3001\u4E2D\u5FC3\u70B9\u304C\u30DD\u30A4\u30F3\u30BF\u306E\u4F4D\u7F6E\u3068\u306A\u308B\u305F\u3081\n        // \u4E2D\u5FC3\u70B9\u3068\u5B9F\u969B\u306E\u8868\u793A\u306E\u4E2D\u5FC3\u304C\u305A\u308C\u308B\u3002\u305D\u306E\u305F\u3081\u30BA\u30FC\u30E0\u5909\u66F4\u5F8C\u306E\u65B0\u305F\u306A\n        // \u4E2D\u5FC3\u70B9\u3092\u8A08\u7B97\u3057\u3001\u8A2D\u5B9A\u3059\u308B\n        if (offsetX !== undefined && offsetY !== undefined) {\n            const rx = rect.width / 2 - offsetX;\n            const ry = rect.height / 2 - offsetY;\n            this.moveCenter(rx, ry);\n        }\n    }\n\n    // OpenStreetMap\u306A\u3069\u306E\u5730\u56F3\u753B\u50CF\u306B\u5BFE\u3059\u308BURL\u3092\u751F\u6210\u3059\u308B\n    getMapURL(x: number, y: number, zoom: number) {\n        const z = Math.round(zoom);\n        const tileMax = 1 << z;\n        x = x % tileMax;\n        if (x < 0) {\n            x = tileMax + x;\n        }\n        y = y % tileMax;\n        if (y < 0) {\n            y = tileMax + y;\n        }\n        return this.mapSource\n            .replace('{x}', String(x))\n            .replace('{y}', String(y))\n            .replace('{z}', String(z));\n    }\n\n    // GPX\u30C7\u30FC\u30BF\u3092\u30BB\u30C3\u30C8\u3059\u308B\n    // setView\u304Ctrue\u306E\u6642\u306F\u5730\u56F3\u306E\u4E2D\u5FC3\u70B9\u3084\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3082\u81EA\u52D5\u8ABF\u6574\u3055\u308C\u308B\n    setGPXData(gpxData: GPXData, setView: boolean = false) {\n        if (!gpxData || isNaN(gpxData.stats.center.lat) || isNaN(gpxData.stats.center.lng)) {\n            return;\n        }\n        this.gpxData = gpxData;\n\n        if (setView) {\n            this.adjustCenterByGPXData();\n            this.adjustZoomLevelByGPXData();\n        }\n    }\n\n    adjustCenterByGPXData() {\n        if (this.gpxData && this.gpxData.stats) {\n            const s = this.gpxData.stats;\n            this.latMax = s.latMax;\n            this.lngMin = s.lngMin;\n            this.setView(s.center);\n        }\n    }\n\n    // Canvas\u3068GPX\u30C7\u30FC\u30BF\u306E\u7BC4\u56F2\u3067\u9069\u5207\u306A\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u8A08\u7B97\u3057\u3066\u8A2D\u5B9A\u3059\u308B\n    adjustZoomLevelByGPXData(margin: number = 1.2): number | undefined {\n        if (!this.canvas) {\n            return;\n        }\n        if (!this.gpxData) {\n            return undefined;\n        }\n\n        // Canvas\u306E\u30B5\u30A4\u30BA\u3092\u53D6\u5F97\n        const rect = this.canvas.getBoundingClientRect();\n\n        // \u30ED\u30B0\u306E\u7BC4\u56F2(m)\u3092\u8A08\u7B97\n        const s = this.gpxData.stats;\n        const min = Geography.degrees2meters(s.latMin, s.lngMin);\n        const max = Geography.degrees2meters(s.latMax, s.lngMax);\n        const wm = (max.x - min.x) * margin;\n        const hm = (max.y - min.y) * margin;\n\n        // \u7BC4\u56F2\u306B\u53CE\u3081\u308B\u305F\u3081\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3001\u30BF\u30A4\u30EB\u6570\u3092\u6C42\u3081\u308B\n        // \u7E26\u6A2A\u305D\u308C\u305E\u308C\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u8A08\u7B97\u3057\u3001\u3088\u308A\u5C0F\u3055\u306A\u65B9\u3092\u53D6\u308B\n        const wz = Math.round(Geography.getZoomByMetersPerPixel(wm / rect.width));\n        const hz = Math.round(Geography.getZoomByMetersPerPixel(hm / rect.height));\n        this.zoom = wz < hz ? wz : hz;\n    }\n\n    setMapSource(mapSource: string) {\n        this.mapSource = mapSource;\n    }\n\n    // \u5730\u56F3\u8868\u793A\u306E\u4E2D\u5FC3\u70B9\u3068\u30BA\u30FC\u30E0\u500D\u7387\u3092\u8A2D\u5B9A\u3059\u308B\n    setView(center: LatLngExpression, zoom?: number) {\n        this.center = new LatLng(center);\n        this.setZoom(zoom);\n    }\n\n    setZoom(zoom?: number) {\n        if (zoom && zoom > 0 && zoom < 30) {\n            this.zoom = zoom;\n        }\n    }\n\n    // \u4E2D\u5FC3\u70B9\u3092x,y\u30D4\u30AF\u30BB\u30EB\u5206\u79FB\u52D5\u3059\u308B\n    // \u79FB\u52D5\u65B9\u5411\u306F\u6B63\u306E\u6570\u306A\u3089\u5357\u6771\u65B9\u5411\n    moveCenter(dx: number, dy: number) {\n        const mpp = Geography.getMetersPerPixelByZoom(this.zoom);\n\n        // \u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u3092\u30E1\u30FC\u30C8\u30EB\u306B\u76F4\u3059\n        const center = Geography.degrees2meters(this.center.lat, this.center.lng);\n        // \u30D4\u30AF\u30BB\u30EB\u5897\u5206\u3092\u30E1\u30FC\u30C8\u30EB\u306B\u5909\u63DB\u3057\u3001\u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u306E\u30E1\u30FC\u30C8\u30EB\u306B\u52A0\u7B97\u3059\u308B\n        center.x += dx * mpp;\n        center.y -= dy * mpp;\n        // \u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u306E\u30E1\u30FC\u30C8\u30EB\u3092\u7D4C\u7DEF\u5EA6\u306B\u623B\u3059\n        const deg = Geography.meters2degrees(center.x, center.y);\n\n        // \u7DEF\u5EA6\u306E\u9650\u754C\n        if (deg.lat > 85.0) {\n            deg.lat = 85.0;\n        }\n        if (deg.lat < -85.0) {\n            deg.lat = -85.0;\n        }\n        // \u7D4C\u5EA6\u306E\u9650\u754C\n        if (deg.lng > 180.0) {\n            deg.lng -= 360.0;\n        }\n        if (deg.lng < -180.0) {\n            deg.lng += 360.0;\n        }\n\n        this.center.lat = deg.lat;\n        this.center.lng = deg.lng;\n    }\n\n    start({ offsetX: x, offsetY: y }: MouseEvent | Record<string, number>) {\n        this.isMoving = true;\n        this.oldPoint = { x, y };\n    }\n\n    stop() {\n        this.oldPoint = undefined;\n        this.isMoving = false;\n    }\n\n    // \u6307\u5B9A\u5EA7\u6A19\u306B\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n    move({ offsetX: x, offsetY: y }: MouseEvent | Record<string, number>) {\n        if (this.oldPoint) {\n            // \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\u306E\u5897\u5206\u3092\u6C42\u3081\u3066\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n            const dx = this.oldPoint.x - x;\n            const dy = this.oldPoint.y - y;\n            this.moveCenter(dx, dy);\n        }\n\n        this.oldPoint = { x, y };\n    }\n\n    handlerResize() {\n        return () => {\n            this.resize();\n        };\n    }\n\n    handlerMouseDown() {\n        return (e: MouseEvent) => {\n            if (this.canvas) {\n                this.canvas.style.cursor = 'grab';\n            }\n            this.start(e);\n        };\n    }\n\n    handlerMouseUp() {\n        return () => {\n            this.stop();\n            if (this.canvas) {\n                this.canvas.style.cursor = '';\n            }\n        };\n    }\n\n    handlerMouseMove() {\n        return (e: MouseEvent) => {\n            if (this.isMoving) {\n                if (this.canvas) {\n                    this.canvas.style.cursor = 'grabbing';\n                }\n                this.move(e);\n                this.draw();\n            }\n        };\n    }\n\n    handlerMouseLeave() {\n        return () => {\n            // this.stop();\n        };\n    }\n\n    handlerTouchStart() {\n        return (e: TouchEvent) => {\n            if (!this.canvas) {\n                return;\n            }\n            e.preventDefault();\n            const rect = this.canvas.getBoundingClientRect();\n\n            // \u30BF\u30C3\u30C1\u72B6\u614B\u3092\u4FDD\u5B58\n            const ts = this.touchMap;\n            const len = Object.keys(ts).length;\n            for (let i = 0; i < e.changedTouches.length; i++) {\n                const t = e.changedTouches[i];\n                const v = { id: t.identifier, x: t.pageX - rect.left, y: t.pageY - rect.top };\n                ts[t.identifier] = v;\n            }\n\n            // \u30BF\u30C3\u30C1\u72B6\u614B\u3092\u30BF\u30C3\u30C1\u9806\u306B\u914D\u5217\u5316\n            this.touchList = Object.values(ts).sort((a, b) => a.id - b.id);\n            if (len === 0) {\n                // \u6700\u521D\u306E\u6307\u306A\u3089\u3070\u30BF\u30C3\u30C1\u958B\u59CB;\n                this.start({\n                    offsetX: this.touchList[0].x,\n                    offsetY: this.touchList[0].y,\n                });\n            }\n        };\n    }\n\n    handlerTouchEnd() {\n        return (e: TouchEvent) => {\n            if (!this.canvas) {\n                return;\n            }\n            //e.preventDefault();\n\n            // \u30BF\u30C3\u30C1\u72B6\u614B\u3092\u4FDD\u5B58\n            const ts = this.touchMap;\n            for (let i = 0; i < e.changedTouches.length; i++) {\n                const t = e.changedTouches[i];\n                if (this.touchList.length > 0 && this.touchList[0].id === t.identifier) {\n                    // \u4E00\u756A\u53E4\u3044\u6307\u304C\u96E2\u308C\u305F\u306A\u3089\u3070\u3044\u3063\u305F\u3093\u505C\u6B62\n                    this.stop();\n                }\n                delete ts[t.identifier];\n            }\n\n            // \u30BF\u30C3\u30C1\u72B6\u614B\u3092\u30BF\u30C3\u30C1\u9806\u306B\u914D\u5217\u5316\n            this.touchList = Object.values(ts).sort((a, b) => a.id - b.id);\n            if (!this.isMoving && this.touchList.length > 0) {\n                // \u30BF\u30C3\u30C1\u304C\u505C\u6B62\u3057\u3066\u3044\u308B\u3068\u304D\u3001\u6B21\u306E\u6307\u304C\u5B58\u5728\u3059\u308B\u5834\u5408\u306F\u6B21\u306E\u6307\u3067\u30BF\u30C3\u30C1\u518D\u958B\n                this.start({\n                    offsetX: this.touchList[0].x,\n                    offsetY: this.touchList[0].y,\n                });\n            }\n        };\n    }\n\n    handlerTouchMove() {\n        return (e: TouchEvent) => {\n            if (!this.canvas) {\n                return;\n            }\n            //e.preventDefault();\n            const rect = this.canvas.getBoundingClientRect();\n\n            const ts = this.touchMap;\n            for (let i = 0; i < e.changedTouches.length; i++) {\n                const t = e.changedTouches[i];\n                let v = ts[t.identifier];\n                if (v) {\n                    v.old = {\n                        x: v.x,\n                        y: v.y,\n                    };\n                    v.x = t.pageX - rect.left;\n                    v.y = t.pageY - rect.top;\n                } else {\n                    v = { id: t.identifier, x: t.pageX - rect.left, y: t.pageY - rect.top };\n                    ts[t.identifier] = v;\n                }\n            }\n            this.touchList = Object.values(ts).sort((a, b) => a.id - b.id);\n\n            // \uFF11\u672C\u76EE\u306E\u30BF\u30C3\u30C1\u60C5\u5831\n            const t0 = this.touchList[0];\n            if (t0.old) {\n                // \uFF11\u672C\u76EE\u306E\u79FB\u52D5\u91CF\n                const d0x = t0.old.x - t0.x;\n                const d0y = t0.old.y - t0.y;\n\n                if (this.touchList.length >= 2) {\n                    // \uFF12\u672C\u76EE\u306E\u30BF\u30C3\u30C1\u60C5\u5831\n                    const t1 = this.touchList[1];\n                    if (t1.old) {\n                        // \uFF12\u672C\u76EE\u306E\u79FB\u52D5\u91CF\n                        const d1x = t1.old.x - t1.x;\n                        const d1y = t1.old.y - t1.y;\n\n                        // \uFF11\u672C\u76EE\u3068\uFF12\u672C\u76EE\u306E\u79FB\u52D5\u91CF\u306E\u5E73\u5747\u5206\u3001\u4E2D\u5FC3\u70B9\u3092\u305A\u3089\u3059\u3002\n                        const dx = (d0x + d1x) / 2;\n                        const dy = (d0y + d1y) / 2;\n\n                        // \u30D4\u30F3\u30C1\u30A4\u30F3\u30FB\u30A2\u30A6\u30C8\u306E\u6700\u7D42\u7684\u306A\u4E2D\u5FC3\u4F4D\u7F6E\u3092\u6C42\u3081\u308B\n                        const rx = (t0.x + t1.x) / 2;\n                        const ry = (t0.y + t1.y) / 2;\n                        this.moveCenter(rx - rect.width / 2 + dx, ry - rect.height / 2 + dy);\n\n                        // \u30D4\u30F3\u30C1\u30A4\u30F3\u30FB\u30A2\u30A6\u30C8\n                        // \uFF11\u672C\u76EE\u3068\uFF12\u672C\u76EE\u306E\u79FB\u52D5\u5834\u6240\u3001\u79FB\u52D5\u91CF\u304B\u3089\u30BA\u30FC\u30E0\u306E\u5909\u5316\u3092\u8A08\u7B97\u3059\u308B\n                        const rb = Math.sqrt(\n                            (t0.old.x - t1.old.x) ** 2 + (t0.old.y - t1.old.y) ** 2,\n                        );\n                        const ra = Math.sqrt((t0.x - t1.x) ** 2 + (t0.y - t1.y) ** 2);\n                        const mpp = Geography.getMetersPerPixelByZoom(this.zoom);\n                        const z = Geography.getZoomByMetersPerPixel((mpp * rb) / ra);\n\n                        // \u63CF\u753B\u3059\u308B\n                        this.draw(rx, ry, z);\n\n                        return;\n                    }\n                }\n            }\n\n            // drag\n            this.move({\n                offsetX: t0.x,\n                offsetY: t0.y,\n            });\n            this.draw();\n        };\n    }\n\n    handlerMouseWheel() {\n        return (e: WheelEvent) => {\n            if (!this.canvas) {\n                return;\n            }\n            e.preventDefault();\n\n            // \u30DB\u30A4\u30FC\u30EB\u64CD\u4F5C\u958B\u59CB\u4F4D\u7F6E\u3092\u4E2D\u5FC3\u306B\u62E1\u5927\u7E2E\u5C0F\u3059\u308B\u305F\u3081\u306B\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n            const x = e.offsetX;\n            const y = e.offsetY;\n            const rect = this.canvas.getBoundingClientRect();\n            const dx = x - rect.width / 2;\n            const dy = y - rect.height / 2;\n            this.moveCenter(dx, dy);\n\n            let z = this.zoom;\n            if (e.deltaY < 0) {\n                z += 0.1;\n                if (z > this.zoomMax) z = this.zoomMax;\n            } else if (e.deltaY > 0) {\n                z += -0.1;\n                if (z < this.zoomMin) z = this.zoomMin;\n            } else {\n                return;\n            }\n            //this.zoom = z;\n\n            this.draw(x, y, z);\n        };\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
