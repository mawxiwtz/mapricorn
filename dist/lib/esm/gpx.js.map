{
  "version": 3,
  "sources": ["../../../src/gpx.ts"],
  "sourcesContent": ["export type WayPoint = {\n    lat: number;\n    lng: number;\n    alt: number;\n    time: number;\n};\n\nexport type GPXData = {\n    stats: {\n        latMin: number;\n        latMax: number;\n        lngMin: number;\n        lngMax: number;\n        altMin: number;\n        altMax: number;\n        center: {\n            lat: number;\n            lng: number;\n            alt: number;\n        };\n        startTime: number;\n        endTime: number;\n        elapsedTime: number;\n    };\n    wpts: WayPoint[];\n};\n\nexport const GPXDataDefault: GPXData = {\n    stats: {\n        latMin: NaN,\n        latMax: NaN,\n        lngMin: NaN,\n        lngMax: NaN,\n        altMin: NaN,\n        altMax: NaN,\n        center: {\n            lat: NaN,\n            lng: NaN,\n            alt: NaN,\n        },\n        startTime: NaN,\n        endTime: NaN,\n        elapsedTime: NaN,\n    },\n    wpts: [],\n};\n\nexport class GPX {\n    doc: Document;\n\n    constructor(xmlStr: string) {\n        this.doc = this.parse(xmlStr);\n    }\n\n    parse(xmlStr: string): Document {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(xmlStr, 'application/xml');\n        const errorNode = doc.querySelector('parsererror');\n        if (errorNode) {\n            throw new Error('An error occurred in parsing');\n        }\n        return doc;\n    }\n\n    // XPath\u306F\u3001\u30C7\u30D5\u30A9\u30EB\u30C8namespace\u3092\u6307\u5B9A\u3067\u304D\u306A\u3044\u3002\n    // \u305D\u306E\u305F\u3081xmlns=\"\"\u306B\u3088\u3063\u3066namespace\u304C\u4E0E\u3048\u3089\u308C\u3066\u3044\u308Bxml\u30C9\u30AD\u30E5\u30E1\u30F3\u30C8\u306B\n    // \u3064\u3044\u3066\u691C\u7D22\u3059\u308B\u5834\u5408\u306F[namespace-uri()]\u306B\u3088\u3063\u3066\u4FEE\u98FE\u3059\u308B\u5FC5\u8981\u304C\u3042\u308B\u3002\n    getXPath(prefix: string, args: string[]): string {\n        const ns = this.doc.lookupNamespaceURI(null);\n        if (ns) {\n            return args\n                .map((p) => prefix + `*[namespace-uri()=\"${ns}\" and name()=\"${p}\"]`)\n                .join('/');\n        } else {\n            return prefix + args.join('/');\n        }\n    }\n\n    toJson(): GPXData {\n        const result = GPXDataDefault;\n\n        // Waypoint\n        const xpath = this.getXPath('/', ['gpx', 'trk', 'trkseg', 'trkpt']);\n        const trkpts = document.evaluate(xpath, this.doc, null, XPathResult.ANY_TYPE, null);\n\n        const s = result.stats;\n        const xpathEle = this.getXPath('', ['ele']);\n        const xpathTime = this.getXPath('', ['time']);\n        let element;\n        while ((element = trkpts.iterateNext())) {\n            const lat = document.evaluate('@lat', element, null, XPathResult.NUMBER_TYPE, null);\n            const lng = document.evaluate('@lon', element, null, XPathResult.NUMBER_TYPE, null);\n            const alt = document.evaluate(xpathEle, element, null, XPathResult.NUMBER_TYPE, null);\n            const tm = document.evaluate(xpathTime, element, null, XPathResult.STRING_TYPE, null);\n            const wpt: WayPoint = {\n                lat: lat.numberValue ?? NaN,\n                lng: lng.numberValue ?? NaN,\n                alt: alt.numberValue ?? NaN,\n                time: new Date(tm.stringValue).getTime(),\n            };\n\n            // NaN\u3068\u306E\u6BD4\u8F03\u7D50\u679C\u306F\u5FC5\u305Afalse\u3068\u306A\u308B\u306E\u3067\u3001\u901A\u5E38\u3068\u53CD\u8EE2\u3057\u305F\u6761\u4EF6\u5F0F\u3068\u306A\u308B\n            if (!(s.latMin <= wpt.lat)) s.latMin = wpt.lat;\n            if (!(s.latMax >= wpt.lat)) s.latMax = wpt.lat;\n            if (!(s.lngMin <= wpt.lng)) s.lngMin = wpt.lng;\n            if (!(s.lngMax >= wpt.lng)) s.lngMax = wpt.lng;\n            if (!(s.altMin <= wpt.alt)) s.altMin = wpt.alt;\n            if (!(s.altMax >= wpt.alt)) s.altMax = wpt.alt;\n            if (!(s.startTime <= wpt.time)) s.startTime = wpt.time;\n            if (!(s.endTime >= wpt.time)) s.endTime = wpt.time;\n            s.center.lat = (s.latMax + s.latMin) / 2;\n            s.center.lng = (s.lngMax + s.lngMin) / 2;\n            s.center.alt = (s.altMax + s.altMin) / 2;\n            s.elapsedTime = s.endTime - s.startTime;\n\n            result.wpts.push(wpt);\n        }\n\n        return result;\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
