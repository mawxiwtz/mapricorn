{
  "version": 3,
  "sources": ["../../../src/mapricorn.ts"],
  "sourcesContent": ["import { LatLng, type LatLngExpression } from './latlng.js';\nimport type { GPXData } from './gpx.js';\nimport { Geography } from './geography.js';\nimport { Vector2 } from './vector.js';\n\ntype PointerInfo = {\n    id: number;\n    x: number;\n    y: number;\n    old?: {\n        x: number;\n        y: number;\n    };\n};\n\nexport type MapricornOptions = {\n    container?: HTMLElement;\n    width?: string;\n    height?: string;\n    mapSource?: string;\n    center?: LatLngExpression;\n    zoom?: number;\n    enableRotate?: boolean;\n};\n\n// \u5730\u56F3\u8868\u793A\u3092\u884C\u3046\u30AF\u30E9\u30B9\nexport class Mapricorn {\n    debug = false;\n    container?: HTMLElement;\n    width = '';\n    height = '';\n    canvas: HTMLCanvasElement;\n    mapSource = 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n    //mapSource = '/map/osm/{z}/{x}/{y}.png';\n    gpxData?: GPXData;\n    center: LatLng;\n    zoom: number = 2;\n    zoomMax = 19;\n    zoomMin = 2;\n    latMax: number = 0;\n    lngMin: number = 0;\n    enableRotate: boolean = true;\n\n    _oldPoint?: { x: number; y: number };\n    _isMoving = false;\n    _imageCache: Record<string, HTMLImageElement> = {};\n    _drawing: boolean = false;\n    _pointers: Record<number, PointerInfo> = {};\n    _shiftL = false;\n    _theta = 0;\n\n    constructor(opts?: MapricornOptions) {\n        this.center = new LatLng([0, 0, 0]);\n        this.canvas = document.createElement('canvas');\n        if (opts) {\n            if (opts.mapSource) {\n                this.mapSource = opts.mapSource;\n            }\n            if (opts.center) {\n                this.center = new LatLng(opts.center);\n            }\n            if (opts.zoom) {\n                this.setZoom(opts.zoom);\n            }\n            if (opts.width) {\n                this.width = opts.width;\n            }\n            if (opts.height) {\n                this.height = opts.height;\n            }\n            if (opts.enableRotate) {\n                this.enableRotate = opts.enableRotate;\n            }\n            if (opts.container) {\n                this.bind(opts.container);\n            }\n        }\n    }\n\n    bind(container: HTMLElement) {\n        if (container === undefined) {\n            throw new Error('Invalid container');\n        }\n        this.container = container;\n        this.setup();\n        this.resize();\n    }\n\n    // canvas\u306E\u521D\u671F\u8A2D\u5B9A\n    setup() {\n        if (!this.container) {\n            return;\n        }\n        this.container.style.position = 'relative';\n        if (this.width) {\n            this.container.style.width = this.width;\n        }\n        if (this.height) {\n            this.container.style.height = this.height;\n        }\n\n        this.canvas = document.createElement('canvas');\n        this.canvas.tabIndex = 0; // enable receive key event on canvas element\n        this.canvas.style.outline = 'none'; // not show outline of canvas when getting focus\n        this.canvas.focus();\n        this.canvas.style.position = 'absolute';\n        this.canvas.style.width = '100%';\n        this.canvas.style.height = '100%';\n        this.container.appendChild(this.canvas);\n\n        // disable pinch in-out by browser\n        this.canvas.addEventListener('touchstart', (event) => {\n            event.preventDefault();\n        });\n\n        this.canvas.addEventListener('pointerdown', this.handlerPointerDown());\n        this.canvas.addEventListener('pointerup', this.handlerPointerUp());\n        this.canvas.addEventListener('pointermove', this.handlerPointerMove());\n        this.canvas.addEventListener('wheel', this.handlerMouseWheel());\n\n        this.canvas.addEventListener('keydown', this.handlerKeyDown());\n        this.canvas.addEventListener('keyup', this.handlerKeyUp());\n\n        window.addEventListener('resize', this.handlerResize());\n    }\n\n    // canvas\u306E\u30EA\u30B5\u30A4\u30BA\u3068\u89E3\u50CF\u5EA6\u8A2D\u5B9A\uFF08\u307C\u3084\u3051\u9632\u6B62\uFF09\n    // canvas\u306E\u5404\u7A2E\u8A2D\u5B9A\u306F\u6D88\u3048\u308B\n    resize() {\n        const dpr = window.devicePixelRatio;\n        this.canvas.width = this.canvas.clientWidth * dpr;\n        this.canvas.height = this.canvas.clientHeight * dpr;\n\n        const context = this.canvas.getContext('2d');\n        if (!context) {\n            return;\n        }\n        context.restore();\n        context.scale(dpr, dpr);\n        context.save();\n\n        this.draw();\n    }\n\n    // \u73FE\u5728\u306E\u4E2D\u5FC3\u70B9\u3068\u65B0\u3057\u3044\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3067\u5730\u56F3\u3092\u63CF\u753B\u3059\u308B\n    // offsetX, offsetY\u306F\u30BA\u30FC\u30E0\u306E\u4E2D\u5FC3\u30D4\u30AF\u30BB\u30EB\uFF08\u3042\u3089\u304B\u3058\u3081moveCenter()\u3067\n    // \u4E2D\u5FC3\u70B9\u3092\u3053\u306E\u4F4D\u7F6E\u306B\u79FB\u52D5\u3057\u3066\u304A\u304F\u3053\u3068\u3002\u63CF\u753B\u5F8C\u306B\u4E2D\u5FC3\u70B9\u306F\u8868\u793A\u9818\u57DF\u306E\u4E2D\u5FC3\u306B\n    // \u518D\u8A2D\u5B9A\u3055\u308C\u308B\uFF09\u3002\u7701\u7565\u6642\u306Fcanvas\u306E\u4E2D\u5FC3\n    // zoom\u306F\u65B0\u3057\u3044\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u6307\u5B9A\u3059\u308B\u3002\u7701\u7565\u6642\u306F\u73FE\u5728\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\n    // easing\u3092false\u306B\u3059\u308B\u3068\u30BA\u30FC\u30E0\u5909\u66F4\u6642\u3082\u30A2\u30CB\u30E1\u30FC\u30B7\u30E7\u30F3\u3057\u306A\u304F\u306A\u308B\uFF08\u30D4\u30F3\u30C1\u64CD\u4F5C\u6642\u306EUX\u5411\u4E0A\uFF09\n    draw(offsetX?: number, offsetY?: number, zoom: number = this.zoom, easing: boolean = true) {\n        const ease = (func: (progress: number) => void, duration: number, endFunc: () => void) => {\n            let start = -1;\n            const handler = { id: 0 };\n            const loop = (tic: number) => {\n                if (start < 0) start = tic;\n                const progress = (tic - start) / duration;\n                func(progress);\n                if (progress < 1) {\n                    handler.id = requestAnimationFrame(loop);\n                } else {\n                    endFunc();\n                }\n            };\n            handler.id = requestAnimationFrame(loop);\n            return handler;\n        };\n\n        const end = () => {\n            // \u65B0\u3057\u3044\u30BA\u30FC\u30E0\u3092\u53CD\u6620\u3059\u308B\n            this.zoom = zoom;\n\n            // this.draw()\u3084this.moveCenter()\u3092\u30A2\u30F3\u30ED\u30C3\u30AF\u3059\u308B\n            this._drawing = false;\n\n            // \u30DB\u30A4\u30FC\u30EB\u30A2\u30AF\u30B7\u30E7\u30F3\u306E\u5834\u5408\u3001\u4E2D\u5FC3\u70B9\u304C\u30DD\u30A4\u30F3\u30BF\u306E\u4F4D\u7F6E\u3068\u306A\u308B\u305F\u3081\n            // \u4E2D\u5FC3\u70B9\u3068\u5B9F\u969B\u306E\u8868\u793A\u306E\u4E2D\u5FC3\u304C\u305A\u308C\u308B\u3002\u305D\u306E\u305F\u3081\u30BA\u30FC\u30E0\u5909\u66F4\u5F8C\u306E\u65B0\u305F\u306A\n            // \u4E2D\u5FC3\u70B9\u3092\u8A08\u7B97\u3057\u3001\u8A2D\u5B9A\u3059\u308B\n            if (offsetX !== undefined && offsetY !== undefined) {\n                const rx = this.canvas.clientWidth / 2 - offsetX;\n                const ry = this.canvas.clientHeight / 2 - offsetY;\n                this.moveCenter(rx, ry);\n            }\n        };\n\n        if (this._drawing) {\n            return;\n        }\n\n        // this.draw()\u304A\u3088\u3073this.moveCenter()\u3092\u30ED\u30C3\u30AF\u3059\u308B\n        this._drawing = true;\n\n        if (!easing || zoom == this.zoom) {\n            this.draw2d(this.canvas, this.center, zoom, 1, offsetX, offsetY);\n            end();\n        } else {\n            // \u30BA\u30FC\u30E0\u500D\u7387\u5909\u66F4\u3092\u30A4\u30FC\u30B8\u30F3\u30B0\u3064\u304D\u3067\u884C\u3046\n            const sign = zoom > this.zoom ? 1 : -1;\n\n            // \u30A2\u30CB\u30E1\u30FC\u30B7\u30E7\u30F3\u3067\u30A4\u30FC\u30B8\u30F3\u30B0\u7528\u30AD\u30E3\u30F3\u30D0\u30B9\u306E\u30B5\u30A4\u30BA\u3068\u900F\u660E\u5EA6\u3092\u5909\u66F4\u3059\u308B\u3002\n            ease(\n                (progress: number) => {\n                    if (progress > 1) progress = 1;\n                    // \u5909\u5316\u524D\u306E\u63CF\u753B\n                    this.draw2d(\n                        this.canvas,\n                        this.center,\n                        this.zoom + sign * progress,\n                        1,\n                        offsetX,\n                        offsetY,\n                    );\n                },\n                300,\n                end,\n            );\n        }\n    }\n\n    draw2d(\n        canvas: HTMLCanvasElement,\n        center: LatLng,\n        zoom: number,\n        alpha: number = 1,\n        offsetX?: number,\n        offsetY?: number,\n    ) {\n        // \u8907\u6570\u306E\u5EA7\u6A19\u7CFB\u3092\u6271\u3046\u305F\u3081\u305D\u308C\u305E\u308C\u306E\u9055\u3044\u306B\u6CE8\u610F\n        //   \u7D4C\u7DEF\u5EA6\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u5EA6\u6570\u5358\u4F4D\u3002\u5317\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u30E1\u30FC\u30C8\u30EB\u5358\u4F4D\u3002\u5317\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30BF\u30A4\u30EBXY\uFF1B\u30B0\u30EA\u30CB\u30C3\u30B8/\u5317\u6975\u3092\u539F\u70B9\u3068\u3057\u305F\u30BF\u30A4\u30EB\u756A\u53F7\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u30D4\u30AF\u30BB\u30EB\u5358\u4F4D\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   Canvas\u5EA7\u6A19\uFF1A\u753B\u9762\u306Ecanvas\u30BF\u30B0\u9818\u57DF\u306E\u5DE6\u4E0A\u9685\u3092\u539F\u70B9\u3068\u3057\u305F\u30D4\u30AF\u30BB\u30EB\u5358\u4F4D\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n\n        // canvas\u306E\u30B5\u30A4\u30BA\n        const w = canvas.clientWidth;\n        const h = canvas.clientHeight;\n\n        // zoom\u306E\u4E2D\u5FC3\u70B9\u306E\u300Ccanvas\u4E0A\u306E\u30AA\u30D5\u30BB\u30C3\u30C8\u300D\u3092\u6C42\u3081\u308B\n        // \u30DB\u30A4\u30FC\u30EB\u30A2\u30AF\u30B7\u30E7\u30F3\u3084\u30D4\u30F3\u30C1\u30A4\u30F3/\u30A2\u30A6\u30C8\u6642\u306Fcanvas\u306E\u4E2D\u5FC3\u3068\u306F\u9650\u3089\u306A\u3044\u3053\u3068\u306B\u6CE8\u610F\u3059\u308B\n        const cx = offsetX ?? w / 2;\n        const cy = offsetY ?? h / 2;\n\n        // canvas\u306E\u8868\u793A\u7BC4\u56F2\u306E\u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\n        // zoom\u30EC\u30D9\u30EB\u3067\u306Ecanvas\u56DB\u9685\u306E\u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\uFF08zoom\u306E\u4E2D\u5FC3\u70B9\u3067\u9006\u56DE\u8EE2\u3055\u305B\u3066\u304A\u304F\uFF09\n        const pa = new Vector2(-cx, -cy).rotate(-this._theta);\n        const pb = new Vector2(w - cx, -cy).rotate(-this._theta);\n        const pc = new Vector2(w - cx, h - cy).rotate(-this._theta);\n        const pd = new Vector2(-cx, h - cy).rotate(-this._theta);\n\n        // zoom\u4E2D\u5FC3\u70B9\u306E\u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\n        const center_meter = Geography.degrees2meters(center.lat, center.lng);\n\n        // 1\u30D4\u30AF\u30BB\u30EB\u5F53\u305F\u308A\u306E\u30E1\u30FC\u30C8\u30EB\n        const mpp = Geography.getMetersPerPixelByZoom(zoom);\n\n        // \u56DB\u9685\u305D\u308C\u305E\u308C\u306E\u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\n        const pma = new Vector2(center_meter.x + pa.x * mpp, center_meter.y - pa.y * mpp);\n        const pmb = new Vector2(center_meter.x + pb.x * mpp, center_meter.y - pb.y * mpp);\n        const pmc = new Vector2(center_meter.x + pc.x * mpp, center_meter.y - pc.y * mpp);\n        const pmd = new Vector2(center_meter.x + pd.x * mpp, center_meter.y - pd.y * mpp);\n        const vab = pmb.clone().sub(pma);\n        const vbc = pmc.clone().sub(pmb);\n        const vcd = pmd.clone().sub(pmc);\n        const vda = pma.clone().sub(pmd);\n\n        // \u56DB\u9685\u305D\u308C\u305E\u308C\u306E\u30BF\u30A4\u30EB\u5EA7\u6A19\n        const ta = Geography.meters2tile(pma.x, pma.y, zoom);\n        const tb = Geography.meters2tile(pmb.x, pmb.y, zoom);\n        const tc = Geography.meters2tile(pmc.x, pmc.y, zoom);\n        const td = Geography.meters2tile(pmd.x, pmd.y, zoom);\n\n        // \u56DB\u9685\u306E\u30BF\u30A4\u30EB\u5EA7\u6A19\u304C\u3059\u3079\u3066\u53CE\u307E\u308B\u30BF\u30A4\u30EB\u7BC4\u56F2\n        let minX = Infinity,\n            minY = Infinity;\n        let maxX = -Infinity,\n            maxY = -Infinity;\n        [ta, tb, tc, td].forEach((tile) => {\n            if (tile.x < minX) minX = tile.x;\n            if (tile.y < minY) minY = tile.y;\n            if (tile.x > maxX) maxX = tile.x;\n            if (tile.y > maxY) maxY = tile.y;\n        });\n\n        // canvas\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u306E\u6E96\u5099\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n            return;\n        }\n        ctx.restore();\n        ctx.save();\n        ctx.globalAlpha = alpha;\n        ctx.translate(cx, cy);\n        ctx.rotate(this._theta);\n\n        if (this.debug) {\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = '#f00';\n            ctx.fillStyle = 'red';\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.font = '26px Arial';\n        }\n\n        // \u4E2D\u5FC3\u70B9\u306E\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\n        const world_center = Geography.meter2world(center_meter.x, center_meter.y, zoom);\n        // \u4E2D\u5FC3\u70B9\u306E\u3042\u308B\u30BF\u30A4\u30EB\n        const tile = Geography.meters2tile(center_meter.x, center_meter.y, zoom);\n        const world_meter = Geography.tile2meters(tile.x, tile.y, zoom);\n        const world = Geography.meter2world(world_meter.x, world_meter.y, zoom);\n        // \u4E2D\u5FC3\u70B9\u306E\u3042\u308B\u30BF\u30A4\u30EB\u306B\u304A\u3051\u308B\u4E2D\u5FC3\u70B9\u306E\u76F8\u5BFE\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\uFF08\u5357\u6771\u65B9\u5411\u304C\u6B63\uFF09\n        const deltax = world_center.x - world.x;\n        const deltay = world_center.y - world.y;\n\n        // \u30BF\u30A4\u30EB\u4E00\u8FBA\u306E\u30D4\u30AF\u30BB\u30EB\u6570\n        const tilePixel = Geography.getTilePixelByZoom(zoom);\n\n        // \u30BF\u30A4\u30EB\u7BC4\u56F2\u5185\u3067\u8868\u793A\u7BC4\u56F2\u5185\u306B\u3042\u308B\u30BF\u30A4\u30EB\u3092\u63CF\u753B\n        const tlenx = maxX - minX + 1;\n        const tleny = maxY - minY + 1;\n        const disparray: boolean[][] = [...Array(tleny)].map(() => [...Array(tlenx)].fill(false));\n        for (let iy = 0; iy < tleny; iy++) {\n            for (let ix = 0; ix < tlenx; ix++) {\n                // \u30BF\u30A4\u30EB\u5DE6\u4E0A\u9685\u9802\u70B9\u306E\u30E1\u30FC\u30C8\u30EB\u5EA7\u6A19\n                const p = Geography.tile2meters(ix + minX, iy + minY, zoom);\n                const point = new Vector2(p.x, p.y);\n                const vap = point.clone().sub(pma);\n                const vbp = point.clone().sub(pmb);\n                const vcp = point.clone().sub(pmc);\n                const vdp = point.clone().sub(pmd);\n\n                // point\u3068canvas\u8868\u793A\u7BC4\u56F2\u306E\u56DB\u8FBA\u3068\u306E\u5404\u5916\u7A4D\u304C\u3059\u3079\u3066\u8CA0\u306A\u3089\u3070point\u306F\u8868\u793A\u7BC4\u56F2\u5185\n                const crosses =\n                    vab.cross(vap) < 0 &&\n                    vbc.cross(vbp) < 0 &&\n                    vcd.cross(vcp) < 0 &&\n                    vda.cross(vdp) < 0;\n\n                disparray[iy][ix] = crosses;\n                if (crosses) {\n                    if (iy > 0) {\n                        disparray[iy - 1][ix] = true;\n                    }\n                    if (ix > 0) {\n                        disparray[iy][ix - 1] = true;\n                    }\n                    if (iy > 0 && ix > 0) {\n                        disparray[iy - 1][ix - 1] = true;\n                    }\n                }\n            }\n        }\n\n        for (let iy = 0; iy < tleny; iy++) {\n            for (let ix = 0; ix < tlenx; ix++) {\n                if (disparray[iy][ix]) {\n                    // \u63CF\u753B\n                    const tx = minX + ix;\n                    const ty = minY + iy;\n                    const x2 = (tx - tile.x) * tilePixel - deltax; // - cx;\n                    const y2 = (ty - tile.y) * tilePixel - deltay; // - cy;\n\n                    const url = this.getMapURL(tx, ty, zoom);\n                    let image: HTMLImageElement;\n                    if (url in this._imageCache) {\n                        image = this._imageCache[url];\n                        ctx.drawImage(image, x2, y2, tilePixel, tilePixel);\n                    } else {\n                        image = new Image(tilePixel, tilePixel);\n                        image.src = url;\n                        //ctx.fillRect(x2, y2, tilePixel, tilePixel);\n                    }\n                    const handler = () => {\n                        // \u8868\u793A\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u306B\u76F4\u63A5\u63CF\u753B\n                        ctx.drawImage(image, x2, y2, tilePixel, tilePixel);\n                        image.removeEventListener('load', handler);\n                        this._imageCache[url] = image;\n\n                        // \u30BF\u30A4\u30EB\u306E\u5883\u754C\u3068\u30BF\u30A4\u30EBXY\u306E\u8868\u793A\n                        if (this.debug) {\n                            ctx.strokeRect(x2, y2, tilePixel, tilePixel);\n                            ctx.fillText(\n                                `${zoom}/${tx}/${ty}`,\n                                x2 + tilePixel / 2,\n                                y2 + tilePixel / 2,\n                            );\n                        }\n                    };\n                    image.addEventListener('load', handler);\n                }\n            }\n        }\n    }\n\n    draw2d_(\n        canvas: HTMLCanvasElement,\n        center: LatLng,\n        zoom: number,\n        alpha: number = 1,\n        offsetX?: number,\n        offsetY?: number,\n    ) {\n        const tilePixel = Geography.getTilePixelByZoom(zoom);\n\n        // \u8907\u6570\u306E\u5EA7\u6A19\u7CFB\u304C\u3042\u308B\u306E\u3067\u6CE8\u610F\n        //   \u7D4C\u7DEF\u5EA6\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u5EA6\u6570\u5358\u4F4D\u3002\u5317\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30E1\u30FC\u30C8\u30EB\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u30E1\u30FC\u30C8\u30EB\u5358\u4F4D\u3002\u5317\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30BF\u30A4\u30EBXY\uFF1B\u30B0\u30EA\u30CB\u30C3\u30B8/\u5317\u6975\u3092\u539F\u70B9\u3068\u3057\u305F\u30BF\u30A4\u30EB\u756A\u53F7\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\uFF1A\u30B0\u30EA\u30CB\u30C3\u30B8/\u8D64\u9053\u3092\u539F\u70B9\u3068\u3057\u305F\u30D4\u30AF\u30BB\u30EB\u5358\u4F4D\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n        //   Canvas\u5EA7\u6A19\uFF1A\u753B\u9762\u306Ecanvas\u30BF\u30B0\u9818\u57DF\u306E\u5DE6\u4E0A\u9685\u3092\u539F\u70B9\u3068\u3057\u305F\u30D4\u30AF\u30BB\u30EB\u5358\u4F4D\u3002\u5357\u6771\u65B9\u5411\u304C\u6B63\u306E\u6570\u5024\n\n        // \u4E2D\u5FC3\u70B9\uFF08\u30E1\u30FC\u30C8\u30EB\uFF09\u3068\u4E2D\u5FC3\u30BF\u30A4\u30EBXY\u3092\u6C42\u3081\u308B\n        const center_meter = Geography.degrees2meters(center.lat, center.lng);\n        const tile = Geography.meters2tile(center_meter.x, center_meter.y, zoom);\n        const cx = offsetX ?? canvas.clientWidth / 2;\n        const cy = offsetY ?? canvas.clientHeight / 2;\n\n        // \u63CF\u753B\u958B\u59CB\u70B9\u306E\u30BF\u30A4\u30EB\u306EXY\u3092\u6C42\u3081\u308B\uFF08\u958B\u59CB\u70B9\u306ELat/Lng\u304C\u306F\u3063\u304D\u308A\u3057\u3066\u3044\u308B\u5834\u5408\uFF09\n        //const startTile = Geography.degrees2tile(this.latMax, this.lngMin, zoom);\n        // \u63CF\u753B\u958B\u59CB\u70B9\u306E\u30BF\u30A4\u30EB\u306EXY\u3092\u6C42\u3081\u308B\uFF08zoom\u3068\u8868\u793A\u9818\u57DF\u304B\u3089\u6C7A\u3081\u308B\u5834\u5408\uFF09\n        const mpp = Geography.getMetersPerPixelByZoom(zoom);\n        const ltx = center_meter.x - cx * mpp;\n        const lty = center_meter.y + cy * mpp;\n        const startTile = Geography.meters2tile(ltx, lty, zoom);\n\n        // \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\u306E\u8A08\u7B97\n        const world_meter = Geography.tile2meters(tile.x, tile.y, zoom);\n        const world = Geography.meter2world(world_meter.x, world_meter.y, zoom);\n        const world_center = Geography.meter2world(center_meter.x, center_meter.y, zoom);\n\n        // \u30BF\u30A4\u30EB\u304C\u5FC5\u8981\u306A\u7BC4\u56F2\u3092\u8A08\u7B97\u3059\u308B\n        // Canvas\u30B5\u30A4\u30BA\u304B\u3089\u3001\u5B9F\u969B\u306B\u8868\u793A\u53EF\u80FD\u306A\u30BF\u30A4\u30EB\u6570\u306F\u304A\u306E\u305A\u3068\u6C7A\u307E\u308B\n        //   rect: Canvas(px)\n        //   center: Canvas\u306E\u4E2D\u5FC3(px)\n        //   world: \u4E2D\u5FC3\u30BF\u30A4\u30EB\u5DE6\u4E0A\u9685\u306E\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\n        //   world_center: \u5730\u56F3\u306E\u4E2D\u5FC3\u306E\u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\n        //   tpx: \u30BF\u30A4\u30EB\u306E1\u8FBA\u306E\u30D4\u30AF\u30BB\u30EB\u6570(= 256)\n        //   cx, cy: canvas\u4E0A\u306E\u4E2D\u5FC3\u70B9\uFF08\u5C0F\u6570\u70B9\u672A\u6E80\u306F\u5207\u308A\u6368\u3066\uFF09\n        //   dx, dy: \u5730\u56F3\u306E\u4E2D\u5FC3\u70B9\u3068\u4E2D\u5FC3\u30BF\u30A4\u30EB\u5DE6\u4E0A\u9685\u3068\u306E\u5DEE\uFF09\n        const dx = world_center.x - world.x;\n        const dy = world_center.y - world.y;\n\n        // 1. canvas\u306E\u30B5\u30A4\u30BA\u306B\u5FDC\u3058\u305F\u5FC5\u8981\u30BF\u30A4\u30EB\u6570\u3068\u306F\u307F\u51FA\u3057\u30D4\u30AF\u30BB\u30EB\u6570\u3092\u6C42\u3081\u308B\n        //    \u300C\u5DE6\u5074\u306F\u307F\u51FA\u3057\u300D\u3068\u3001\u300C\u30D5\u30EB\u8868\u793A+\u53F3\u5074\u306F\u307F\u51FA\u3057\u300D\u306B\u308F\u3051\u3066\u8003\u3048\u308B\u3002\n        //    \u5DE6\u5074\u306F\u307F\u51FA\u3057\u30D4\u30AF\u30BB\u30EB\u6570 modx = (cx - dx) % tpx\n        //    modx\u304C0\u306A\u3089\u306F\u307F\u3060\u3057\u306A\u3057\u30010\u4EE5\u4E0A\u306A\u3089\u5DE6\u306F\u307F\u3060\u3057\u3042\u308A\u3002\u305F\u3060\u3057\u8CA0\u6570\u306A\u3089\u753B\u9762\u5916\u306A\u306E\u3067\u63CF\u753B\u4E0D\u8981\n        //      tilexnum = modx\u3092\u9664\u3044\u305F\u90E8\u5206\u3092\u30AB\u30D0\u30FC\u3059\u308B\u30BF\u30A4\u30EB\u6570 + modx\u5206\u306E\u30BF\u30A4\u30EB\n        //      \u9AD8\u3055\u306B\u3064\u3044\u3066\u3082\u540C\u69D8\u306B\u8A08\u7B97\n        const modx = (cx - dx) % tilePixel;\n        const tilexnum = Math.ceil((canvas.clientWidth - modx) / tilePixel) + (modx > 0 ? 1 : 0);\n        const mody = (cy - dy) % tilePixel;\n        const tileynum = Math.ceil((canvas.clientHeight - mody) / tilePixel) + (mody > 0 ? 1 : 0);\n\n        // 2. Canvas\u306B\u30BF\u30A4\u30EB\u753B\u50CF\u3092\u6577\u304D\u8A70\u3081\u308B\u3002\n        //      ln + lm + tx + rm + rn\n        //      \u9AD8\u3055\u306B\u3064\u3044\u3066\u3082\u540C\u69D8\u306B\u8A08\u7B97\n        //      \u5DE6\u4E0A\u9685\u304B\u3089\u6577\u3044\u3066\u3044\u304F\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n            return;\n        }\n        ctx.restore();\n        ctx.save();\n        ctx.globalAlpha = alpha;\n        ctx.translate(cx, cy);\n        ctx.rotate(this._theta);\n\n        if (this.debug) {\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = '#f00';\n            ctx.fillStyle = 'red';\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.font = '26px Arial';\n        }\n\n        // \u30AA\u30D5\u30B9\u30AF\u30EA\u30FC\u30F3\u304B\u3089canvas\u306B\u8EE2\u9001\u3059\u308B\u969B\u306E\u30AA\u30D5\u30BB\u30C3\u30C8\u3092\u8A08\u7B97\n        // \u3053\u3061\u3089\u304C\u901F\u304F\u3067\u304D\u308B\u304C\u3001startTile\u304C\u30BF\u30A4\u30EB\u30DE\u30C3\u30D7\u306E\u6700\u521D\u3067\u306A\u3044\u3068\u3044\u3051\u306A\u3044\n        //const deltax = modx >= 0 ? modx - tilePixel : modx;\n        //const deltay = mody >= 0 ? mody - tilePixel : mody;\n        // \u3053\u3061\u3089\u304C\u6C4E\u7528\n        const startTile_meter = Geography.tile2meters(startTile.x, startTile.y, zoom);\n        const offsetX_meter = startTile_meter.x - ltx;\n        const offsetY_meter = lty - startTile_meter.y;\n        const deltax = offsetX_meter / mpp;\n        const deltay = offsetY_meter / mpp;\n        // ctx.fillStyle = '#ddd';\n\n        for (let x = 0; x < tilexnum; x++) {\n            for (let y = 0; y < tileynum; y++) {\n                const tx =\n                    startTile.x + x; /* + (modx > 0 ? -1 : 0) // lng\u6307\u5B9AstartTile\u306E\u5834\u5408\u306B\u5FC5\u8981 */\n                const ty =\n                    startTile.y + y; /* + (mody > 0 ? -1 : 0) // lat\u6307\u5B9AstartTile\u306E\u5834\u5408\u306B\u5FC5\u8981 */\n                const x2 = x * tilePixel + deltax - cx;\n                const y2 = y * tilePixel + deltay - cy;\n                const url = this.getMapURL(tx, ty, zoom);\n                let image: HTMLImageElement;\n                if (url in this._imageCache) {\n                    image = this._imageCache[url];\n                    ctx.drawImage(image, x2, y2, tilePixel, tilePixel);\n                } else {\n                    image = new Image(tilePixel, tilePixel);\n                    image.src = url;\n                    //ctx.fillRect(x2, y2, tilePixel, tilePixel);\n                }\n                const handler = () => {\n                    // \u8868\u793A\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u306B\u76F4\u63A5\u63CF\u753B\n                    ctx.drawImage(image, x2, y2, tilePixel, tilePixel);\n                    image.removeEventListener('load', handler);\n                    this._imageCache[url] = image;\n\n                    // \u30BF\u30A4\u30EB\u306E\u5883\u754C\u3068\u30BF\u30A4\u30EBXY\u306E\u8868\u793A\n                    if (this.debug) {\n                        ctx.strokeRect(x2, y2, tilePixel, tilePixel);\n                        ctx.fillText(`${zoom}/${tx}/${ty}`, x2 + tilePixel / 2, y2 + tilePixel / 2);\n                    }\n                };\n                image.addEventListener('load', handler);\n            }\n        }\n    }\n\n    // OpenStreetMap\u306A\u3069\u306E\u5730\u56F3\u753B\u50CF\u306B\u5BFE\u3059\u308BURL\u3092\u751F\u6210\u3059\u308B\n    getMapURL(x: number, y: number, zoom: number) {\n        const z = Math.round(zoom);\n        const tileMax = 1 << z;\n        x = x % tileMax;\n        if (x < 0) {\n            x = tileMax + x;\n        }\n        y = y % tileMax;\n        if (y < 0) {\n            y = tileMax + y;\n        }\n        return this.mapSource\n            .replace('{x}', String(x))\n            .replace('{y}', String(y))\n            .replace('{z}', String(z));\n    }\n\n    // GPX\u30C7\u30FC\u30BF\u3092\u30BB\u30C3\u30C8\u3059\u308B\n    // setView\u304Ctrue\u306E\u6642\u306F\u5730\u56F3\u306E\u4E2D\u5FC3\u70B9\u3084\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3082\u81EA\u52D5\u8ABF\u6574\u3055\u308C\u308B\n    setGPXData(gpxData: GPXData, setView: boolean = false) {\n        if (!gpxData || isNaN(gpxData.stats.center.lat) || isNaN(gpxData.stats.center.lng)) {\n            return;\n        }\n        this.gpxData = gpxData;\n\n        if (setView) {\n            this.adjustCenterByGPXData();\n            this.adjustZoomLevelByGPXData();\n        }\n    }\n\n    adjustCenterByGPXData() {\n        if (this.gpxData && this.gpxData.stats) {\n            const s = this.gpxData.stats;\n            this.latMax = s.latMax;\n            this.lngMin = s.lngMin;\n            this.setView(s.center);\n        }\n    }\n\n    // Canvas\u3068GPX\u30C7\u30FC\u30BF\u306E\u7BC4\u56F2\u3067\u9069\u5207\u306A\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u8A08\u7B97\u3057\u3066\u8A2D\u5B9A\u3059\u308B\n    adjustZoomLevelByGPXData(margin: number = 1.2): number | undefined {\n        if (!this.gpxData) {\n            return undefined;\n        }\n\n        // \u30ED\u30B0\u306E\u7BC4\u56F2(m)\u3092\u8A08\u7B97\n        const s = this.gpxData.stats;\n        const min = Geography.degrees2meters(s.latMin, s.lngMin);\n        const max = Geography.degrees2meters(s.latMax, s.lngMax);\n        const wm = (max.x - min.x) * margin;\n        const hm = (max.y - min.y) * margin;\n\n        // \u7BC4\u56F2\u306B\u53CE\u3081\u308B\u305F\u3081\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3001\u30BF\u30A4\u30EB\u6570\u3092\u6C42\u3081\u308B\n        // \u7E26\u6A2A\u305D\u308C\u305E\u308C\u306E\u30BA\u30FC\u30E0\u30EC\u30D9\u30EB\u3092\u8A08\u7B97\u3057\u3001\u3088\u308A\u5C0F\u3055\u306A\u65B9\u3092\u53D6\u308B\n        const wz = Math.round(Geography.getZoomByMetersPerPixel(wm / this.canvas.clientWidth));\n        const hz = Math.round(Geography.getZoomByMetersPerPixel(hm / this.canvas.clientHeight));\n        this.zoom = wz < hz ? wz : hz;\n    }\n\n    setMapSource(mapSource: string) {\n        this.mapSource = mapSource;\n    }\n\n    // \u5730\u56F3\u8868\u793A\u306E\u4E2D\u5FC3\u70B9\u3068\u30BA\u30FC\u30E0\u500D\u7387\u3092\u8A2D\u5B9A\u3059\u308B\n    setView(center: LatLngExpression, zoom?: number) {\n        this.center = new LatLng(center);\n        this.setZoom(zoom);\n    }\n\n    setZoom(zoom?: number) {\n        if (zoom && zoom > 0 && zoom < 30) {\n            this.zoom = zoom;\n        }\n    }\n\n    // \u4E2D\u5FC3\u70B9\u3092x,y\u30D4\u30AF\u30BB\u30EB\u5206\u79FB\u52D5\u3059\u308B\n    // \u79FB\u52D5\u65B9\u5411\u306F\u6B63\u306E\u6570\u306A\u3089\u5357\u6771\u65B9\u5411\n    moveCenter(dx: number, dy: number) {\n        const dv = new Vector2(dx, dy);\n        dv.rotate(-this._theta);\n        if (this._drawing) {\n            return;\n        }\n        const mpp = Geography.getMetersPerPixelByZoom(this.zoom);\n\n        // \u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u3092\u30E1\u30FC\u30C8\u30EB\u306B\u76F4\u3059\n        const center = Geography.degrees2meters(this.center.lat, this.center.lng);\n        // \u30D4\u30AF\u30BB\u30EB\u5897\u5206\u3092\u30E1\u30FC\u30C8\u30EB\u306B\u5909\u63DB\u3057\u3001\u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u306E\u30E1\u30FC\u30C8\u30EB\u306B\u52A0\u7B97\u3059\u308B\n        center.x += dv.x * mpp;\n        center.y -= dv.y * mpp;\n        // \u4E2D\u5FC3\u7D4C\u7DEF\u5EA6\u306E\u30E1\u30FC\u30C8\u30EB\u3092\u7D4C\u7DEF\u5EA6\u306B\u623B\u3059\n        const deg = Geography.meters2degrees(center.x, center.y);\n\n        // \u7DEF\u5EA6\u306E\u9650\u754C\n        if (deg.lat > 85.0) {\n            deg.lat = 85.0;\n        }\n        if (deg.lat < -85.0) {\n            deg.lat = -85.0;\n        }\n        // \u7D4C\u5EA6\u306E\u9650\u754C\n        if (deg.lng > 180.0) {\n            deg.lng -= 360.0;\n        }\n        if (deg.lng < -180.0) {\n            deg.lng += 360.0;\n        }\n\n        this.center.lat = deg.lat;\n        this.center.lng = deg.lng;\n    }\n\n    start({ offsetX: x, offsetY: y }: MouseEvent | Record<string, number>) {\n        this._isMoving = true;\n        this._oldPoint = { x, y };\n    }\n\n    stop() {\n        this._oldPoint = undefined;\n        this._isMoving = false;\n    }\n\n    // \u6307\u5B9A\u5EA7\u6A19\u306B\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n    move({ offsetX: x, offsetY: y }: MouseEvent | Record<string, number>) {\n        if (this._oldPoint) {\n            // \u30EF\u30FC\u30EB\u30C9\u5EA7\u6A19\u306E\u5897\u5206\u3092\u6C42\u3081\u3066\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n            const dx = this._oldPoint.x - x;\n            const dy = this._oldPoint.y - y;\n            this.moveCenter(dx, dy);\n        }\n\n        this._oldPoint = { x, y };\n    }\n\n    handlerResize() {\n        return () => {\n            this.resize();\n        };\n    }\n\n    handlerPointerDown() {\n        return (e: PointerEvent) => {\n            this._pointers[e.pointerId] = {\n                id: e.pointerId,\n                x: e.offsetX,\n                y: e.offsetY,\n            };\n            const element = <HTMLCanvasElement>e.currentTarget;\n            element.setPointerCapture(e.pointerId);\n\n            const pointers = Object.values(this._pointers);\n            if (pointers.length === 1) {\n                // \u6700\u521D\u306E\u6307\u306A\u3089\u3070\u30BF\u30C3\u30C1\u958B\u59CB\n                this.canvas.style.cursor = 'grab';\n                this.start({\n                    offsetX: pointers[0].x,\n                    offsetY: pointers[0].y,\n                });\n            }\n        };\n    }\n\n    handlerPointerUp() {\n        return (e: PointerEvent) => {\n            //e.preventDefault();\n\n            const element = <HTMLCanvasElement>e.currentTarget;\n            element.releasePointerCapture(e.pointerId);\n            delete this._pointers[e.pointerId];\n\n            const pointers = Object.values(this._pointers);\n            if (pointers.length === 0) {\n                // \u6307\u304C\u3059\u3079\u3066\u96E2\u308C\u305F\n                this.stop();\n                this.canvas.style.cursor = '';\n            }\n        };\n    }\n\n    handlerPointerMove() {\n        return (e: PointerEvent) => {\n            //e.preventDefault();\n\n            if (!this._isMoving) {\n                return;\n            }\n\n            // \u30DD\u30A4\u30F3\u30BF\u60C5\u5831\u306E\u66F4\u65B0\n            if (e.pointerId in this._pointers) {\n                const v = this._pointers[e.pointerId];\n                v.old = {\n                    x: v.x,\n                    y: v.y,\n                };\n                v.x = e.offsetX;\n                v.y = e.offsetY;\n            } else {\n                this._pointers[e.pointerId] = { id: e.pointerId, x: e.offsetX, y: e.offsetY };\n            }\n\n            // \u30DD\u30A4\u30F3\u30BF\u3092\u53E4\u3044\u9806\u306B\u30BD\u30FC\u30C8\u3057\u3066\u914D\u5217\u5316\n            const pointers = Object.values(this._pointers).sort((a, b) => a.id - b.id);\n            if (pointers.length === 0) {\n                return;\n            }\n\n            // \uFF11\u672C\u76EE\u306E\u30BF\u30C3\u30C1\u60C5\u5831\n            const p0 = pointers[0];\n            if (!p0.old) {\n                return;\n            }\n\n            const w = this.canvas.clientWidth;\n            const h = this.canvas.clientHeight;\n\n            // \uFF11\u672C\u76EE\u306E\u79FB\u52D5\u91CF\n            // \u5730\u56F3\u3092\u53F3\u4E0B\u306B\u30C9\u30E9\u30C3\u30B0\u3057\u305F\u5834\u5408\u3001\u5730\u56F3\u306E\u4E2D\u5FC3\u3092\u5DE6\u4E0A\u306B\u79FB\u52D5\u3059\u308B\u3053\u3068\u3068\u540C\u3058\u3002\n            const d0 = new Vector2(p0.old.x - p0.x, p0.old.y - p0.y);\n\n            if (pointers.length >= 2) {\n                // \u30DE\u30EB\u30C1\u30BF\u30C3\u30C1\n                // \uFF12\u672C\u76EE\u306E\u30BF\u30C3\u30C1\u60C5\u5831\n                const p1 = pointers[1];\n                if (!p1.old) {\n                    return;\n                }\n\n                // \uFF12\u672C\u76EE\u306E\u79FB\u52D5\u91CF\n                const d1 = new Vector2(p1.old.x - p1.x, p1.old.y - p1.y);\n\n                // \uFF11\u672C\u76EE\u3068\uFF12\u672C\u76EE\u306E\u79FB\u52D5\u91CF\u306E\u5E73\u5747\u5206\u3001\u4E2D\u5FC3\u70B9\u3092\u305A\u3089\u3059\u3002\n                const dx = (d0.x + d1.x) / 2;\n                const dy = (d0.y + d1.y) / 2;\n\n                // \u30D4\u30F3\u30C1\u30A4\u30F3\u30FB\u30A2\u30A6\u30C8\u306E\u6700\u7D42\u7684\u306A\u4E2D\u5FC3\u4F4D\u7F6E\u3092\u6C42\u3081\u308B\n                const rx = (p0.x + p1.x) / 2;\n                const ry = (p0.y + p1.y) / 2;\n                this.moveCenter(rx - w / 2 + dx, ry - h / 2 + dy);\n\n                let z = this.zoom;\n\n                // \u30D4\u30F3\u30C1\u30A4\u30F3\u30FB\u30A2\u30A6\u30C8\n                // \uFF11\u672C\u76EE\u3068\uFF12\u672C\u76EE\u306E\u79FB\u52D5\u5834\u6240\u3001\u79FB\u52D5\u91CF\u304B\u3089\u30BA\u30FC\u30E0\u306E\u5909\u5316\u3092\u8A08\u7B97\u3059\u308B\n                const rb = Math.sqrt((p0.old.x - p1.old.x) ** 2 + (p0.old.y - p1.old.y) ** 2);\n                const ra = Math.sqrt((p0.x - p1.x) ** 2 + (p0.y - p1.y) ** 2);\n                const mpp = Geography.getMetersPerPixelByZoom(this.zoom);\n                z = Geography.getZoomByMetersPerPixel((mpp * rb) / ra);\n\n                if (z > this.zoomMax) z = this.zoomMax;\n                if (z < this.zoomMin) z = this.zoomMin;\n\n                if (this.enableRotate && pointers.length >= 3) {\n                    // \uFF13\u672C\u4EE5\u4E0A\u306E\u3068\u304D\u306E\u307F\u56DE\u8EE2\u6709\u52B9\n                    // \uFF12\u672C\u306E\u30BF\u30C3\u30C1\u4F4D\u7F6E\uFF08\u79FB\u52D5\u524D\u3001\u79FB\u52D5\u5F8C\uFF09\u3092\u6B63\u898F\u5316\u3059\u308B\n                    const v00 = new Vector2(p0.old.x / w - 0.5, p0.old.y / h - 0.5);\n                    const v01 = new Vector2(p0.x / w - 0.5, p0.y / h - 0.5);\n                    const v10 = new Vector2(p1.old.x / w - 0.5, p1.old.y / h - 0.5);\n                    const v11 = new Vector2(p1.x / w - 0.5, p1.y / h - 0.5);\n\n                    // \uFF12\u672C\u6307\u9593\u306E\u4E2D\u9593\u4F4D\u7F6E\u3092\u6C42\u3081\u308B\n                    const c00 = v00.clone().add(v10).div(2);\n                    const c01 = v01.clone().add(v11).div(2);\n\n                    // \u5730\u56F3\u306E\u4E2D\u592E\u3092\u5186\u306E\u4E2D\u5FC3\u3068\u3057\u305F\u30D9\u30AF\u30C8\u30EB\u306B\u3059\u308B\n                    v00.sub(c00);\n                    v10.sub(c00);\n                    v01.sub(c01);\n                    v11.sub(c01);\n\n                    // \u5404\u6307\u306E\u56DE\u8EE2\u89D2\u3092\u6C42\u3081\u3001\u5408\u7B97\u3092\u5E73\u5747\u3057\u305F\u3082\u306E\u3092\u5730\u56F3\u306E\u56DE\u8EE2\u89D2\u3068\u3059\u308B\n                    const delta0 = v00.angleTo(v01) * (v00.cross(v01) < 0 ? -1 : 1);\n                    const delta1 = v10.angleTo(v11) * (v10.cross(v11) < 0 ? -1 : 1);\n                    const deltaRad = (delta0 + delta1) / 2;\n\n                    let theta = this._theta + deltaRad;\n                    if (theta > Math.PI * 2) theta = theta - Math.PI * 2;\n                    if (theta < -Math.PI * 2) theta = theta + Math.PI * 2;\n                    this._theta = theta;\n                }\n\n                // \u63CF\u753B\u3059\u308B\n                this.draw(rx, ry, z, false);\n\n                return;\n            } else {\n                // \u30DE\u30A6\u30B9\u30C9\u30E9\u30C3\u30B0 or \u30B7\u30F3\u30B0\u30EB\u30BF\u30C3\u30C1\n                if (this.enableRotate && this._shiftL) {\n                    // Shift + \u30C9\u30E9\u30C3\u30B0\u3067\u5730\u56F3\u306E\u56DE\u8EE2\n                    const v0 = new Vector2(p0.old.x / w - 0.5, p0.old.y / h - 0.5);\n                    const v1 = new Vector2(p0.x / w - 0.5, p0.y / h - 0.5);\n                    const sign = v0.cross(v1) < 0 ? -1 : 1;\n\n                    let theta = this._theta + v0.angleTo(v1) * sign;\n                    if (theta > Math.PI * 2) theta = theta - Math.PI * 2;\n                    if (theta < -Math.PI * 2) theta = theta + Math.PI * 2;\n                    this._theta = theta;\n\n                    this.draw();\n                } else {\n                    // \u5730\u56F3\u306E\u79FB\u52D5\n                    if (this._oldPoint) {\n                        const nx = this._oldPoint.x - d0.x;\n                        const ny = this._oldPoint.y - d0.y;\n                        this.move({\n                            offsetX: nx,\n                            offsetY: ny,\n                        });\n                        this.draw();\n                    }\n                }\n                return;\n            }\n        };\n    }\n\n    handlerMouseWheel() {\n        return (e: WheelEvent) => {\n            // disable wheel action by browser\n            e.preventDefault();\n\n            // \u30DB\u30A4\u30FC\u30EB\u64CD\u4F5C\u958B\u59CB\u4F4D\u7F6E\u3092\u4E2D\u5FC3\u306B\u62E1\u5927\u7E2E\u5C0F\u3059\u308B\u305F\u3081\u306B\u4E2D\u5FC3\u70B9\u3092\u79FB\u52D5\u3059\u308B\n            const x = e.offsetX;\n            const y = e.offsetY;\n            const dx = e.offsetX - this.canvas.clientWidth / 2;\n            const dy = e.offsetY - this.canvas.clientHeight / 2;\n            this.moveCenter(dx, dy);\n\n            let z = this.zoom;\n            if (e.deltaY < 0) {\n                z += 1;\n                if (z > this.zoomMax) z = this.zoomMax;\n            } else if (e.deltaY > 0) {\n                z += -1;\n                if (z < this.zoomMin) z = this.zoomMin;\n            } else {\n                return;\n            }\n\n            this.draw(x, y, z);\n        };\n    }\n\n    handlerKeyDown() {\n        const keyMap: Record<string, () => void> = {\n            ShiftLeft: () => {\n                this._shiftL = true;\n            },\n        };\n\n        return (e: KeyboardEvent) => {\n            const func = keyMap[e.code];\n            if (func) func();\n        };\n    }\n\n    handlerKeyUp() {\n        const keyMap: Record<string, () => void> = {\n            ShiftLeft: () => {\n                this._shiftL = false;\n            },\n        };\n\n        return (e: KeyboardEvent) => {\n            const func = keyMap[e.code];\n            if (func) func();\n        };\n    }\n}\n"],
  "mappings": "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",
  "names": ["tile"]
}
